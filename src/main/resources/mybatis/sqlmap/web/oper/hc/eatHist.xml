<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oper.hc.eatHist">

    <!--섭취_이력 리스트 조회-->
	<select id="selectEatHistList" parameterType="java.util.Map" resultType="MybatisMap">
		select *from
		(select  tdeh.stnd_dt         as stnd_dt /* stnd_dt 기준_일자 character(8) */
		       , teb.loc_nm           as loc_nm/* loc_nm  학교_명   varchar(100) */
		       , tdeh.stdt_no         as stdt_no /* stdt_no 학생_번호 numeric      */
		       , DECR(tsb.stdt_nm)          as stdt_nm/* stdt_nm 학생_명   varchar(40)  */
		       , max(case when tfb.mmel_yn = 'Y' then 'Y' else 'N' end)  as mmel_yn        /* fmenu_yn       아침_여부   char                   */
		       , max(case when tfb.mmel_yn = 'Y' then tfb.fmenu_seq end) as mmel_fmenu_seq /* mmel_fmenu_seq 식단표_순번 numeric                */
		       , max(case when tfb.mmel_yn = 'Y' then tfb.fmenu_nm  end) as mmel_fmenu_nm  /* mmel_fmenu_nm  식단표_명   character varying(100) */
		       , max(case when tfb.amel_yn = 'Y' then 'Y' else 'N' end)  as amel_yn        /* fmenu_yn       점심_여부   char                   */
		       , max(case when tfb.amel_yn = 'Y' then tfb.fmenu_seq end) as amel_fmenu_seq /* amel_fmenu_seq 식단표_순번 numeric                */
		       , max(case when tfb.amel_yn = 'Y' then tfb.fmenu_nm  end) as amel_fmenu_nm  /* amel_fmenu_nm  식단표_명   character varying(100) */
		       , max(case when tfb.emel_yn = 'Y' then 'Y' else 'N' end)  as emel_yn        /* fmenu_yn       저녁_여부   char                   */
		       , max(case when tfb.emel_yn = 'Y' then tfb.fmenu_seq end) as emel_fmenu_seq /* emel_fmenu_seq 식단표_순번 numeric                */
		       , max(case when tfb.emel_yn = 'Y' then tfb.fmenu_nm  end) as emel_fmenu_nm  /* emel_fmenu_nm  식단표_명   character varying(100) */
		       , max(case when tfb.smel_yn = 'Y' then 'Y' else 'N' end)  as smel_yn        /* smel_yn        간식_여부   char                   */
		       , max(case when tfb.smel_yn = 'Y' then tfb.fmenu_seq end) as smel_fmenu_seq /* smel_fmenu_seq 식단표_순번 numeric                */
		       , max(case when tfb.smel_yn = 'Y' then tfb.fmenu_nm  end) as smel_fmenu_nm  /* smel_fmenu_nm  식단표_명   character varying(100) */
		       , DECR(tbi.tel_no)            as tel_no /* tel_no      전화_번호       character varying(20)  */
		       , tdeh.guar_no          as guar_no /* guar_no     보호자_번호     numeric                */
		       , DECR(tgb.guar_nm)           as guar_nm /* guar_nm     보호자_명       character varying(40)  */
		       , DECR(tgb.guar_tel_no)       as guar_tel_no /* guar_tel_no 보호자_전화_번호 character varying(20) */
		from     ts_dd_eat_hist tdeh
		         inner join TS_FMENU_BASE tfb               --식단표_기본 tsb
		                 on tdeh.guar_no   = tfb.guar_no
		                and tdeh.fmenu_seq = tfb.fmenu_seq
		         inner join TM_STDT_BASE tsb                --학생_기본 tsb
		                 on tdeh.stdt_no = tsb.stdt_no
		         inner join TI_EORG_BASE teb                --교육기관_기본 teb
		                 on tsb.eorg_loc_no = teb.loc_no
		         inner join TS_BAND_INFO tbi                --밴드_정보 tbi
		                 on tsb.band_id = tbi.band_id
		         inner join TM_GUAR_BASE tgb                --보호자_기본 tgb
		                 on tdeh.guar_no = tgb.guar_no
		where    1=1
		<if test="stndDtFr != null and stndDtFr != null and stndDtTo !='' and stndDtTo !='' ">
		and tdeh.stnd_dt between replace(#{stndDtFr},'-','') and replace(#{stndDtTo},'-','')</if> /*기준 일자*/
		<if test=" stdtNo != null and stdtNo !='' ">
		and tdeh.stdt_no = #{stdtNo}::NUMERIC </if>                          /*학생_번호*/
		<if test=" stdtNm != null and stdtNm !='' ">
		and tdeh.stdt_nm like CONCAT('%',#{stdtNm},'%')</if>                 /*학생_명*/
		<if test=" fmenuNm != null and fmenuNm !='' ">
		and tfb.fmenu_nm like CONCAT('%',#{fmenuNm},'%')</if>                /*식단표_명*/
		<if test=" guarNo != null and guarNo !='' ">
		and tdeh.guar_no = #{guarNo}::NUMERIC </if>                          /*보호자_번호*/
		<if test=" guarNm != null and guarNm !='' ">
		and tsb.guar_NM like CONCAT('%',#{guarNm},'%')</if>                  /*보호자_명*/
		<if test=" locNm != null and locNm !='' ">
		and tsb.LOC_NM like CONCAT('%',#{locNm},'%')</if>                    /*학교_명*/
		group by tdeh.stnd_dt, teb.loc_nm , tdeh.stdt_no, tsb.stdt_nm, tdeh.guar_no, tbi.tel_no , tgb.guar_nm  , tgb.guar_tel_no
		) fmenuData
		where 1=1
		<if test=" mmelYn != null and mmelYn !=''">		/*아침,점심,저녁,간식_식사_여부*/
		and fmenuData.mmel_yn = #{mmelYn} </if>
		<if test=" amelYn != null and amelYn !=''">		/*아침,점심,저녁,간식_식사_여부*/
		and fmenuData.amel_yn = #{amelYn}</if>
		<if test=" emelYn != null and emelYn !=''">		/*아침,점심,저녁,간식_식사_여부*/
		and fmenuData.emel_yn = #{emelYn}</if>
		<if test=" smelYn != null and smelYn !=''">		/*아침,점심,저녁,간식_식사_여부*/
		and fmenuData.smel_yn = #{smelYn} </if>
		<if test=" mmelStarvYn != null and mmelStarvYn !=''">
		and fmenuData.mmel_yn = #{mmelStarvYn}</if>    /*아침_결식_여부*/
		group by fmenuData.stnd_dt, fmenuData.loc_nm , fmenuData.stdt_no, fmenuData.stdt_nm, fmenuData.guar_no, fmenuData.tel_no , fmenuData.guar_nm  , fmenuData.guar_tel_no, fmenuData.mmel_yn, fmenuData.mmel_fmenu_seq, fmenuData.mmel_fmenu_nm
		, fmenuData.amel_yn, fmenuData.amel_fmenu_seq, fmenuData.amel_fmenu_nm, fmenuData.emel_yn, fmenuData.emel_fmenu_seq, fmenuData.emel_fmenu_nm, fmenuData.smel_yn, fmenuData.smel_fmenu_seq, fmenuData.smel_fmenu_nm
		<if test=' paging == "Y" '>
		LIMIT ${rowCount} OFFSET ${currentIndex} </if>
	</select>

	<!--식단_정보_리스트 조회-->
	<select id="selectFmenuSpecList" parameterType="java.util.Map" resultType="MybatisMap">
		select   fmenuSpec.FMENU_CTGRY                            as FMENU_CTGRY /* fmenu_ctgry  식단_유형                          */
		       , fmenuSpec.FMENU_SEQ                              as FMENU_SEQ   /* fmenu_seq    식단표_순번 numeric                */
    	       , fmenuSpec.FMENU_NM                               as FMENU_NM    /* fmenu_nm     식단표_명   character varying(100) */
		       , fmenuSpec.FOOD_NO                                as FOOD_NO     /* food_no      식품_번호   numeric                */
    	       , fmenuSpec.FOOD_NM                                as FOOD_NM     /* food_nm      식품_명     character varying(100) */
    	       , fmenuSpec.QTY                                    as QTY         /* qty          수량        numeric                */
    	       , fmenuSpec.EAT_QTY                                as EAT_QTY     /* eat_qty      섭취_용량   numeric                */
    	       , sum(fmenuSpec.EAT_QTY) over()                    as fmenu_qty   /* fmenu_qty    식단_용량   numeric                */
		from    (
		           select  case
		                   when TFB.MMEL_YN = 'Y' then '아침'
		                   when TFB.AMEL_YN = 'Y' then '점심'
		                   when TFB.EMEL_YN = 'Y' then '저녁'
		                   when TFB.SMEL_YN = 'Y' then '간식' end as FMENU_CTGRY  /* fmenu_ctgry  식단_유형                          */
		                 , TFB.FMENU_SEQ                          as FMENU_SEQ    /* fmenu_seq    식단표_순번 numeric                */
		                 , TFB.FMENU_NM                           as FMENU_NM     /* fmenu_nm     식단표_명   character varying(100) */
		                 , TFI.FOOD_NM                            as FOOD_NM      /* food_nm      식품_명     character varying(100) */
		                 , TFI.FOOD_NO                            as FOOD_NO      /* food_no      식품_번호   numeric                */
		                 , TFS.QTY                                as QTY          /* qty          수량        numeric                */
		                 , (TFI.OTIM_EAT_QTY*TFS.QTY)             as EAT_QTY      /* eat_qty      섭취_용량   numeric                */
		           from    TS_FMENU_BASE TFB                                      --식단_기본
		                   inner join TS_FMENU_SPEC TFS
		                          on  TFB.GUAR_NO = TFS.GUAR_NO
		                          and TFB.FMENU_SEQ = TFS.FMENU_SEQ
		                   inner join TI_FOOD_INFO TFI                            --음식_정보
		                           on TFS.FOOD_NO = TFI.FOOD_NO
		           where   1=1
		           and     TFB.GUAR_NO   = #{guarNo}::NUMERIC
		           and     TFB.FMENU_SEQ = #{fmenuSeq}::NUMERIC
			     ) fmenuSpec
		where    1=1
		group by fmenuSpec.FMENU_CTGRY, fmenuSpec.FMENU_NM, fmenuSpec.FOOD_NM, fmenuSpec.QTY , fmenuSpec.EAT_QTY, fmenuSpec.FOOD_NO, fmenuSpec.FMENU_SEQ
	</select>

	<!--섭취_영양소_정보_리스트 조회-->
	<select id="selectEatNutrSpecList" parameterType="java.util.Map" resultType="MybatisMap">
	    select TFE.FOOD_NO                              as FOOD_NO      /* food_no      식품_번호        numeric               */
             , CONCAT(TNI.NUTR_NM,'(',TFE.NUTR_CD,')')  as NUTR_NM      /* nutr_nm      영양소_명        character varying(40) */
             , (TFE.NUTR_QTY * #{eatQty}::NUMERIC )     as NUTR_QTY     /* nutr_qty     영양소_용량      numeric               */
             , TNI.NUTR_UNIT_CD                         as NUTR_UNIT_CD /* nutr_unit_cd 영양소_단위_코드 character varying(20) */
        FROM   TI_FOOD_ELEM TFE                                          -- 식품_성분  TFE
               inner join TI_NUTR_INFO TNI                               -- 영양소_정보 TNI
                       on TFE.NUTR_CD = TNI.NUTR_CD
        where 1=1
        and   TFE.FOOD_NO = #{foodNo}::NUMERIC                          /* food_no 식품_번호 numeric */
	</select>
</mapper>