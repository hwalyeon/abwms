<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oper.hc.eatHist">

    <!--섭취_이력 리스트 조회-->
	<select id="selectEatHistList" parameterType="java.util.Map" resultType="MybatisMap">
		--
		WITH TEMP_OBJ AS 
		(
		  SELECT  A.STND_DT                                                      AS STND_DT,
		          A.STDT_NO                                                      AS STDT_NO,
		          MAX(ABSV.DECR(C.STDT_NM)                                    )  AS STDT_NM,
		          MAX(C.EORG_LOC_NO)                                             AS EORG_LOC_NO,
		          A.GUAR_NO                                                      AS GUAR_NO,
		          MAX(ABSV.DECR(D.GUAR_NM    )                                )  AS GUAR_NM,
		          MAX(ABSV.DECR(D.GUAR_TEL_NO)                                )  AS GUAR_TEL_NO,
		          MAX(B.MMEL_YN                                               )  AS MMEL_YN,
		          MAX(CASE WHEN B.MMEL_YN = 'Y' THEN B.FMENU_SEQ ELSE NULL END)  AS MMEL_FMENU_SEQ,
		          SUM(CASE WHEN B.MMEL_YN = 'Y' THEN 1           ELSE 0    END)  AS MMEL_FMENU_CNT,
		          MAX(B.AMEL_YN                                               )  AS AMEL_YN,
		          MAX(CASE WHEN B.AMEL_YN = 'Y' THEN B.FMENU_SEQ ELSE NULL END)  AS AMEL_FMENU_SEQ,
		          SUM(CASE WHEN B.AMEL_YN = 'Y' THEN 1           ELSE 0    END)  AS AMEL_FMENU_CNT,
		          MAX(B.EMEL_YN                                               )  AS EMEL_YN,
		          MAX(CASE WHEN B.EMEL_YN = 'Y' THEN B.FMENU_SEQ ELSE NULL END)  AS EMEL_FMENU_SEQ,
		          SUM(CASE WHEN B.EMEL_YN = 'Y' THEN 1           ELSE 0    END)  AS EMEL_FMENU_CNT,
		          MAX(B.SMEL_YN                                               )  AS SMEL_YN,
		          MAX(CASE WHEN B.SMEL_YN = 'Y' THEN B.FMENU_SEQ ELSE NULL END)  AS SMEL_FMENU_SEQ,
		          SUM(CASE WHEN B.SMEL_YN = 'Y' THEN 1           ELSE 0    END)  AS SMEL_FMENU_CNT
		
		  FROM    ABSV.TS_DD_EAT_HIST  A
		
		          LEFT OUTER JOIN
		          ABSV.TS_FMENU_BASE   B
		          ON  B.GUAR_NO   = A.GUAR_NO
		          AND B.FMENU_SEQ = A.FMENU_SEQ
		
		          LEFT OUTER JOIN
		          ABSV.TM_STDT_BASE    C
		          ON  C.STDT_NO   = A.STDT_NO
		
		          LEFT OUTER JOIN
		          ABSV.TM_GUAR_BASE    D
		          ON  D.GUAR_NO   = A.GUAR_NO
		
		  WHERE   1=1
		<if test="stndDtFr != null and stndDtFr != null and stndDtTo !='' and stndDtTo !='' ">
		   AND    A.STND_DT BETWEEN #{stndDtFr} AND #{stndDtTo}</if>
		<if test=" stdtNo != null and stdtNo !='' ">
		   AND    C.STDT_NO = #{stdtNo}</if>
		<if test=" stdtNm != null and stdtNm !='' ">
		   AND    C.STDT_NM = ABSV.ENCR(#{stdtNm})</if>
		<if test=" fmenuNm != null and fmenuNm !='' ">
		   AND    B.FMENU_NM LIKE '%'||#{fmenuNm}||'%'</if>
		<if test=" guarNo != null and guarNo !='' ">
		   AND    D.GUAR_NO = #{guarNo}</if>
		<if test=" guarNm != null and guarNm !='' ">
		   AND    D.GUAR_NM = ABSV.ENCR(#{guarNm})</if>
		
		  GROUP BY A.STND_DT, A.STDT_NO, A.GUAR_NO
		)
		
		SELECT  A.STND_DT                     AS STND_DT       ,   
		        B.LOC_NM                      AS SCHL_NM       ,
		        A.STDT_NO                     AS STDT_NO       ,    
		        A.STDT_NM                     AS STDT_NM       ,   
		        A.GUAR_NO                     AS GUAR_NO       ,  
		        A.GUAR_NM                     AS GUAR_NM       , 
		        A.GUAR_TEL_NO                 AS GUAR_TEL_NO   ,
		        A.MMEL_YN                     AS MMEL_YN       ,   
		        A.MMEL_FMENU_SEQ              AS MMEL_FMENU_SEQ,
		        C.FMENU_NM||(CASE WHEN A.MMEL_FMENU_CNT > 1 THEN ' 외 '||(A.MMEL_FMENU_CNT-1) ELSE '' END) AS MMEL_FMENU_NM ,
		        A.MMEL_FMENU_CNT              AS MMEL_FMENU_CNT,
		        A.AMEL_YN                     AS AMEL_YN       ,     
		        A.AMEL_FMENU_SEQ              AS AMEL_FMENU_SEQ,
		        D.FMENU_NM                    AS AMEL_FMENU_NM ,
		        A.AMEL_FMENU_CNT              AS AMEL_FMENU_CNT,
		        A.EMEL_YN                     AS EMEL_YN       ,     
		        A.EMEL_FMENU_SEQ              AS EMEL_FMENU_SEQ,
		        E.FMENU_NM                    AS EMEL_FMENU_NM ,
		        A.EMEL_FMENU_CNT              AS EMEL_FMENU_CNT,
		        A.SMEL_YN                     AS SMEL_YN       ,     
		        A.SMEL_FMENU_SEQ              AS SMEL_FMENU_SEQ,
		        F.FMENU_NM                    AS SMEL_FMENU_NM ,
		        A.SMEL_FMENU_CNT              AS SMEL_FMENU_CNT 
		
		FROM    TEMP_OBJ  A
		
		        LEFT OUTER JOIN
		        ABSV.TS_LOC_INFO_BASE B
		        ON  B.LOC_NO = A.EORG_LOC_NO
		        
		        LEFT OUTER JOIN
		        ABSV.TS_FMENU_BASE    C
		        ON  C.GUAR_NO   = A.GUAR_NO
		        AND C.FMENU_SEQ = A.MMEL_FMENU_SEQ
		        
		        LEFT OUTER JOIN
		        ABSV.TS_FMENU_BASE    D
		        ON  D.GUAR_NO   = A.GUAR_NO
		        AND D.FMENU_SEQ = A.AMEL_FMENU_SEQ
		        
		        LEFT OUTER JOIN
		        ABSV.TS_FMENU_BASE    E
		        ON  E.GUAR_NO   = A.GUAR_NO
		        AND E.FMENU_SEQ = A.EMEL_FMENU_SEQ
		        
		        LEFT OUTER JOIN
		        ABSV.TS_FMENU_BASE    F
		        ON  F.GUAR_NO   = A.GUAR_NO
		        AND F.FMENU_SEQ = A.SMEL_FMENU_SEQ
		
		WHERE   1=1
		<if test=' mmelYn != null and mmelYn !="" and mmelYn != "N"'>	
		 AND    A.MMEL_FMENU_CNT > 0</if>
		<if test=' amelYn != null and amelYn !="" and amelYn != "N"'>	
		 AND    A.AMEL_FMENU_CNT > 0</if>
		<if test=' emelYn != null and emelYn !="" and emelYn != "N"'>	
		 AND    A.EMEL_FMENU_CNT > 0</if>
		<if test=' smelYn != null and smelYn !="" and smelYn != "N"'>	
		 AND    A.SMEL_FMENU_CNT > 0</if>
		<if test=' mmelStarvYn != null and mmelStarvYn !="" and mmelStarvYn != "N"'>
		 AND    A.MMEL_FMENU_CNT = 0</if>
		 
		ORDER BY A.STND_DT DESC, A.STDT_NO ASC
		
		<if test=' paging == "Y" '>
		LIMIT ${rowCount} OFFSET ${currentIndex} </if>
	</select>

	<!--식단_정보_리스트 조회-->
	<select id="selectFmenuSpecList" parameterType="java.util.Map" resultType="MybatisMap">
		select   fmenuSpec.FMENU_CTGRY                            as FMENU_CTGRY /* fmenu_ctgry  식단_유형                          */
		       , fmenuSpec.FMENU_SEQ                              as FMENU_SEQ   /* fmenu_seq    식단표_순번 numeric                */
    	       , fmenuSpec.FMENU_NM                               as FMENU_NM    /* fmenu_nm     식단표_명   charactaer varying(100) */
		       , fmenuSpec.FOOD_NO                                as FOOD_NO     /* food_no      식품_번호   numeric                */
    	       , fmenuSpec.FOOD_NM                                as FOOD_NM     /* food_nm      식품_명     character varying(100) */
    	       , fmenuSpec.QTY                                    as QTY         /* qty          수량        numeric                */
    	       , fmenuSpec.EAT_QTY                                as EAT_QTY     /* eat_qty      섭취_용량   numeric                */
    	       , sum(fmenuSpec.EAT_QTY) over()                    as fmenu_qty   /* fmenu_qty    식단_용량   numeric                */
		from    (
		           select  case
		                   when TFB.MMEL_YN = 'Y' then '아침'
		                   when TFB.AMEL_YN = 'Y' then '점심'
		                   when TFB.EMEL_YN = 'Y' then '저녁'
		                   when TFB.SMEL_YN = 'Y' then '간식' end as FMENU_CTGRY  /* fmenu_ctgry  식단_유형                          */
		                 , TFB.FMENU_SEQ                          as FMENU_SEQ    /* fmenu_seq    식단표_순번 numeric                */
		                 , TFB.FMENU_NM                           as FMENU_NM     /* fmenu_nm     식단표_명   character varying(100) */
		                 , TFI.FOOD_NM                            as FOOD_NM      /* food_nm      식품_명     character varying(100) */
		                 , TFI.FOOD_NO                            as FOOD_NO      /* food_no      식품_번호   numeric                */
		                 , TFS.QTY                                as QTY          /* qty          수량        numeric                */
		                 , (TFI.OTIM_EAT_QTY*TFS.QTY)             as EAT_QTY      /* eat_qty      섭취_용량   numeric                */
		           from    TS_FMENU_BASE TFB                                      --식단_기본
		                   inner join TS_FMENU_SPEC TFS
		                          on  TFB.GUAR_NO = TFS.GUAR_NO
		                          and TFB.FMENU_SEQ = TFS.FMENU_SEQ
		                   inner join TI_FOOD_INFO TFI                            --음식_정보
		                           on TFS.FOOD_NO = TFI.FOOD_NO
		           where   1=1
		           and     TFB.GUAR_NO   = #{guarNo}::NUMERIC
		           and     TFB.FMENU_SEQ = #{fmenuSeq}::NUMERIC
			     ) fmenuSpec
		where    1=1
		group by fmenuSpec.FMENU_CTGRY, fmenuSpec.FMENU_NM, fmenuSpec.FOOD_NM, fmenuSpec.QTY , fmenuSpec.EAT_QTY, fmenuSpec.FOOD_NO, fmenuSpec.FMENU_SEQ
	</select>

	<!--섭취_영양소_정보_리스트 조회-->
	<select id="selectEatNutrSpecList" parameterType="java.util.Map" resultType="MybatisMap">
	    select TFE.FOOD_NO                              as FOOD_NO      /* food_no      식품_번호        numeric               */
             , CONCAT(TNI.NUTR_NM,'(',TFE.NUTR_CD,')')  as NUTR_NM      /* nutr_nm      영양소_명        character varying(40) */
             , TRIM(TO_CHAR((TFE.NUTR_QTY * #{eatQty}::NUMERIC),'999,999,999.9'))     as NUTR_QTY     /* nutr_qty     영양소_용량      numeric               */
             , TNI.NUTR_UNIT_CD                         as NUTR_UNIT_CD /* nutr_unit_cd 영양소_단위_코드 character varying(20) */
        FROM   TI_FOOD_ELEM TFE                                          -- 식품_성분  TFE
               inner join TI_NUTR_INFO TNI                               -- 영양소_정보 TNI
                       on TFE.NUTR_CD = TNI.NUTR_CD
        where 1=1
        and   TFE.FOOD_NO = #{foodNo}::NUMERIC                          /* food_no 식품_번호 numeric */
	</select>
</mapper>