<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oper.cmon.totMonStat">




	<!-- 위험안전발생 -->
	<select id="searchDgsfOccr" parameterType="java.util.Map" resultType="MybatisMap">
		WITH STDT_CNT AS
					(
					SELECT      COALESCE(COUNT(1), 0) AS STDT_CNT
					FROM        TM_STDT_BASE
					WHERE       1=1
					AND         BAND_STAT_CD = 'NORM'
					GROUP BY    BAND_STAT_CD
					)
		SELECT      SUM(MNTH_DNGR_AVG)                                      AS MNTH_DNGR_AVG,
					SUM(TDAY_NORM)                                          AS TDAY_NORM,
					SUM(TDAY_CHK)                                           AS TDAY_CHK,
					SUM(TDAY_WARN)                                          AS TDAY_WARN,
					SUM(TDAY_PDNGR)                                         AS TDAY_PDNGR,
					SUM(TDAY_DNGR)                                          AS TDAY_DNGR,
					SUM(TDAY_DNGR_SUM)                                      AS TDAY_DNGR_SUM,
					SUM(TDAY_DNGR_SUM) - SUM(MNTH_DNGR_AVG)                 AS DIF_CNT,
					SUM(TDAY_DNGR_SUM) / (SELECT STDT_CNT FROM STDT_CNT)    AS PERS_AVG
		FROM        (
					SELECT      AVG(CNT)    AS MNTH_DNGR_AVG,
								0           AS TDAY_NORM,
								0           AS TDAY_CHK,
								0           AS TDAY_WARN,
								0           AS TDAY_PDNGR,
								0           AS TDAY_DNGR,
								0           AS TDAY_DNGR_SUM
					FROM        (
					SELECT      COUNT(1) AS CNT
					FROM        TS_STDT_DGEM_HIST TSDH
					WHERE       1=1
					AND         DGEM_STAT_CD IN ('PDNGR', 'DNGR')
					AND         DGEM_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
					GROUP BY    DGEM_DT
					) MNTH_AVG
					UNION ALL
					SELECT      0,
								SUM(NORM)   AS TDAY_NORM,
								SUM(CHK)    AS TDAY_CHK,
								SUM(WARN)   AS TDAY_WARN,
								SUM(PDNGR)  AS TDAY_PDNGR,
								SUM(DNGR)   AS TDAY_DNGR,
								SUM(PDNGR) + SUM(DNGR) AS TDAY_DNGR_SUM
					FROM        (
								SELECT      CASE WHEN DGEM_STAT_CD = 'NORM'     THEN SUM(CNT) ELSE 0 END AS NORM,
											CASE WHEN DGEM_STAT_CD = 'CHK'      THEN SUM(CNT) ELSE 0 END AS CHK,
											CASE WHEN DGEM_STAT_CD = 'WARN'     THEN SUM(CNT) ELSE 0 END AS WARN,
											CASE WHEN DGEM_STAT_CD = 'PDNGR'    THEN SUM(CNT) ELSE 0 END AS PDNGR,
											CASE WHEN DGEM_STAT_CD = 'DNGR'     THEN SUM(CNT) ELSE 0 END AS DNGR
								FROM        (
								SELECT      COUNT(1) AS CNT, DGEM_STAT_CD
								FROM        TS_STDT_DGEM_HIST TSDH
								WHERE       1=1
								AND         DGEM_DT = TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
								GROUP BY    DGEM_STAT_CD) A
								GROUP BY    DGEM_STAT_CD
								) DAY_TOT
					) DGEM_TOT_CNT
	</select>

	<!-- 위험지역_추이 -->
	<select id="searchDzonTrnd" parameterType="java.util.Map" resultType="MybatisMap">
		WITH BDAY AS
					(
					SELECT      COALESCE(SUM(OCCR_CNT), 0) AS BDAY_1
					FROM        TT_DGEM_STAT_STSS
					WHERE       1=1
					AND         STND_DT = TO_CHAR(NOW() - INTERVAL '1 DAY', 'YYYYMMDD'::TEXT)
					AND         DGEM_STAT_CD IN ('PDNGR', 'DNGR')
					)
		SELECT      (SELECT BDAY_1 FROM BDAY)   AS BDAY_1,
					SUM(WEEK_1_AGO)             AS WEEK_1_AGO,
					SUM(WEEK_2_AGO)             AS WEEK_2_AGO,
					SUM(WEEK_3_AGO)             AS WEEK_3_AGO,
					SUM(WEEK_4_AGO)             AS WEEK_4_AGO
		FROM        (
					SELECT      CASE WHEN WEEK_SEQ = 1 THEN SUM(OCCR_CNT) END WEEK_1_AGO,
								CASE WHEN WEEK_SEQ = 2 THEN SUM(OCCR_CNT) END WEEK_2_AGO,
								CASE WHEN WEEK_SEQ = 3 THEN SUM(OCCR_CNT) END WEEK_3_AGO,
								CASE WHEN WEEK_SEQ = 4 THEN SUM(OCCR_CNT) END WEEK_4_AGO
					FROM        (
								SELECT      STND_YYMM,
											MNTH_WEEK_SEQ,
											ROUND(AVG(OCCR_CNT),2) AS OCCR_CNT,
											ROW_NUMBER () OVER (ORDER BY STND_YYMM DESC, MNTH_WEEK_SEQ DESC) AS WEEK_SEQ
								FROM        (
											SELECT      STND_DT, STND_YYMM,
														MNTH_WEEK_SEQ,
														SUM(OCCR_CNT) AS OCCR_CNT
											FROM        TT_DGEM_STAT_STSS
											WHERE       DGEM_STAT_CD IN ('PDNGR', 'DNGR')
											GROUP BY    STND_DT, STND_YYMM, MNTH_WEEK_SEQ
											ORDER BY    STND_YYMM DESC, MNTH_WEEK_SEQ DESC
											) A
								WHERE       1=1
								GROUP BY    STND_YYMM, MNTH_WEEK_SEQ
								ORDER BY    STND_YYMM DESC, MNTH_WEEK_SEQ DESC
								LIMIT       4
								) B
					WHERE       1=1
					GROUP BY    WEEK_SEQ
					) DZON_TRND
	</select>

	<!-- 안전위험지역_탐지율 -->
	<select id="searchDgsfDtct" parameterType="java.util.Map" resultType="MybatisMap">
		SELECT      SUM(GORG_DZON) AS GORG_DZON, SUM(GORG_SZON) AS GORG_SZON, SUM(GUAR_DZON) AS GUAR_DZON, SUM(GUAR_SZON) AS GUAR_SZON
		FROM        (
					WITH TOT_CNT AS (
								SELECT      SUM(OCCR_CNT) AS TOT_CNT
								FROM        TT_ZONE_DTCT_STSS TZDS
								WHERE       1=1
								AND         STND_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
								)
					SELECT      CASE WHEN LOC_APNT_CD = 'GORG' AND PLC_CLSS_CD = 'DZONE' THEN ROUND(SUM(OCCR_CNT)/TSC.TOT_CNT*100,2) ELSE 0 END AS GORG_DZON,
								CASE WHEN LOC_APNT_CD = 'GORG' AND PLC_CLSS_CD = 'SZONE' THEN ROUND(SUM(OCCR_CNT)/TSC.TOT_CNT*100,2) ELSE 0 END AS GORG_SZON,
								CASE WHEN LOC_APNT_CD = 'GUAR' AND PLC_CLSS_CD = 'DZONE' THEN ROUND(SUM(OCCR_CNT)/TSC.TOT_CNT*100,2) ELSE 0 END AS GUAR_DZON,
								CASE WHEN LOC_APNT_CD = 'GUAR' AND PLC_CLSS_CD = 'SZONE' THEN ROUND(SUM(OCCR_CNT)/TSC.TOT_CNT*100,2) ELSE 0 END AS GUAR_SZON
					FROM        TT_ZONE_DTCT_STSS TZDS
								LEFT OUTER JOIN TOT_CNT TSC ON 1=1
					WHERE       1=1
					AND         STND_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
					GROUP BY    LOC_APNT_CD, PLC_CLSS_CD, TOT_CNT
					) GORG_GUAR_DTCT
	</select>

	<!-- 위험감정_카운트 -->
	<select id="searchDgemCnt" parameterType="java.util.Map" resultType="MybatisMap">
		WITH DGEM_DZON AS
					(
					SELECT      COUNT(1) AS DGEM_DZON
					FROM        TS_STDT_LOC_HIST
					WHERE       1=1
					AND         OCCR_DTTM BETWEEN TO_CHAR(NOW(), 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
					AND         PLC_CLSS_CD = 'DZONE'
					)
		SELECT      COALESCE(SUM(DGEM_DZON) + SUM(DGEM_FALL) + SUM(DGEM_HBIT) + SUM(DGEM_TEMP), 0) AS DGEM_TOTL,
					COALESCE(SUM(DGEM_DZON), 0) AS DGEM_DZON,
					COALESCE(SUM(DGEM_FALL), 0) AS DGEM_FALL,
					COALESCE(SUM(DGEM_HBIT), 0) AS DGEM_HBIT,
					COALESCE(SUM(DGEM_TEMP), 0) AS DGEM_TEMP
		FROM        (
					SELECT      0                                                                       AS DGEM_DZON,
								CASE WHEN ACT_DIV_CD    = 'FALL'            THEN COUNT(1) ELSE 0 END    AS DGEM_FALL,
								CASE WHEN HBIT_STAT_CD IN ('VSLOW','VFAST') THEN COUNT(1) ELSE 0 END    AS DGEM_HBIT,
								CASE WHEN TEMP_STAT_CD IN ('VLOW', 'VHIGH') THEN COUNT(1) ELSE 0 END    AS DGEM_TEMP
					FROM        TS_STDT_DGEM_HIST
					WHERE       1=1
					AND         DGEM_DT BETWEEN TO_CHAR(NOW(), 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
					GROUP BY    PLC_CLSS_CD, ACT_DIV_CD, HBIT_STAT_CD, TEMP_STAT_CD
					UNION ALL
					SELECT      DGEM_DZON,
								0,
								0,
								0
					FROM 		DGEM_DZON
					) DGEM_TOT_CN
	</select>

	<!-- 위험지역_TOP3_공공 -->
	<select id="searchDngrTop3Gorg" parameterType="java.util.Map" resultType="MybatisMap">
		SELECT      MAX(GORG_DTOP3_PLC_NM_1)    AS GORG_DTOP3_PLC_NM_1,
					MAX(GORG_DTOP3_ADDR_1)      AS GORG_DTOP3_ADDR_1,
					SUM(GORG_DTOP3_CNT_1)       AS GORG_DTOP3_CNT_1,
					MAX(GORG_DTOP3_PLC_NM_2)    AS GORG_DTOP3_PLC_NM_2,
					MAX(GORG_DTOP3_ADDR_2)      AS GORG_DTOP3_ADDR_2,
					SUM(GORG_DTOP3_CNT_2)       AS GORG_DTOP3_CNT_2,
					MAX(GORG_DTOP3_PLC_NM_3)    AS GORG_DTOP3_PLC_NM_3,
					MAX(GORG_DTOP3_ADDR_3)      AS GORG_DTOP3_ADDR_3,
					SUM(GORG_DTOP3_CNT_3)       AS GORG_DTOP3_CNT_3
		FROM        (
					SELECT      CASE WHEN GORG_DTOP3_RANK = 1 THEN GORG_DTOP3_PLC_NM    END GORG_DTOP3_PLC_NM_1,
								CASE WHEN GORG_DTOP3_RANK = 1 THEN GORG_DTOP3_ADDR      END GORG_DTOP3_ADDR_1,
								CASE WHEN GORG_DTOP3_RANK = 1 THEN GORG_DTOP3_CNT       END GORG_DTOP3_CNT_1,
								CASE WHEN GORG_DTOP3_RANK = 2 THEN GORG_DTOP3_PLC_NM    END GORG_DTOP3_PLC_NM_2,
								CASE WHEN GORG_DTOP3_RANK = 2 THEN GORG_DTOP3_ADDR      END GORG_DTOP3_ADDR_2,
								CASE WHEN GORG_DTOP3_RANK = 2 THEN GORG_DTOP3_CNT       END GORG_DTOP3_CNT_2,
								CASE WHEN GORG_DTOP3_RANK = 3 THEN GORG_DTOP3_PLC_NM    END GORG_DTOP3_PLC_NM_3,
								CASE WHEN GORG_DTOP3_RANK = 3 THEN GORG_DTOP3_ADDR      END GORG_DTOP3_ADDR_3,
								CASE WHEN GORG_DTOP3_RANK = 3 THEN GORG_DTOP3_CNT       END GORG_DTOP3_CNT_3
					FROM        (
								SELECT      FN_GETCDNM('PLC_CD', TLIB.PLC_CD) AS GORG_DTOP3_PLC_NM,
											TLIB.ADDR_BASE || ' ' || TLIB.ADDR_SPEC AS GORG_DTOP3_ADDR,
											COUNT(1) AS GORG_DTOP3_CNT,
											ROW_NUMBER () OVER (ORDER BY COUNT(1) DESC) AS GORG_DTOP3_RANK
								FROM        TT_ZONE_DTCT_STSS TZDS
											INNER JOIN
											TS_LOC_INFO_BASE TLIB
											ON TZDS.LOC_NO = TLIB.LOC_NO
								WHERE       1=1
								AND         TZDS.STND_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
								AND         TZDS.PLC_CLSS_CD = 'DZONE'
								AND         TZDS.LOC_APNT_CD = 'GORG'
								GROUP BY    TZDS.LOC_NO, TLIB.PLC_CD, TLIB.ADDR_BASE, TLIB.ADDR_SPEC /* ADDR_SPEC 수정이 일어났을 경우 같은 LOC_NO라도 다르게 집계될 수 있네. */
								LIMIT       3
								) A
					) GORG_DTOP3
	</select>

	<!-- 보호자_지정_위험지역_TOP3 -->
	<select id="searchGuarApntDngrTop3" parameterType="java.util.Map" resultType="MybatisMap">
		SELECT      MAX(GUAR_DTOP3_ADDR_1)      AS GUAR_DTOP3_ADDR_1,
					SUM(GUAR_DTOP3_CNT_1)       AS GUAR_DTOP3_CNT_1,
					MAX(GUAR_DTOP3_ADDR_2)      AS GUAR_DTOP3_ADDR_2,
					SUM(GUAR_DTOP3_CNT_2)       AS GUAR_DTOP3_CNT_2,
					MAX(GUAR_DTOP3_ADDR_3)      AS GUAR_DTOP3_ADDR_3,
					SUM(GUAR_DTOP3_CNT_3)       AS GUAR_DTOP3_CNT_3
		FROM        (
					SELECT      CASE WHEN GUAR_DTOP3_RANK = 1 THEN GUAR_DTOP3_ADDR      END GUAR_DTOP3_ADDR_1,
								CASE WHEN GUAR_DTOP3_RANK = 1 THEN GUAR_DTOP3_CNT       END GUAR_DTOP3_CNT_1,
								CASE WHEN GUAR_DTOP3_RANK = 2 THEN GUAR_DTOP3_ADDR      END GUAR_DTOP3_ADDR_2,
								CASE WHEN GUAR_DTOP3_RANK = 2 THEN GUAR_DTOP3_CNT       END GUAR_DTOP3_CNT_2,
								CASE WHEN GUAR_DTOP3_RANK = 3 THEN GUAR_DTOP3_ADDR      END GUAR_DTOP3_ADDR_3,
								CASE WHEN GUAR_DTOP3_RANK = 3 THEN GUAR_DTOP3_CNT       END GUAR_DTOP3_CNT_3
					FROM        (
								SELECT      NEAR_ADDR       AS GUAR_DTOP3_ADDR,
											COUNT(1)        AS GUAR_DTOP3_CNT,
											ROW_NUMBER () OVER (ORDER BY COUNT(1) DESC) AS GUAR_DTOP3_RANK
								FROM        TT_GUAR_DZONE_STSS TGDS
								WHERE       1=1
								AND         TGDS.STND_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT)
								GROUP BY    LAT_VAL, LON_VAL, NEAR_ADDR
								LIMIT       3
								) A
					)GUAR_DTOP3
	</select>

	<!-- 위험감정_이력 -->
	<select id="searchDgemHist" parameterType="java.util.Map" resultType="MybatisMap">
		SELECT      DGEM_DT,
					DGEM_TM,
					DGEM_HIST_STAT_CD,
					DGEM_HIST_STAT_NM
		FROM        (
						(
						SELECT     TO_CHAR(TO_DATE(OCCR_DTTM, 'YYYYMMDDHH24MISS'::TEXT), 'MM/DD') AS DGEM_DT,
								   TO_CHAR(TO_TIMESTAMP(OCCR_DTTM, 'YYYYMMDDHH24MISS'::TEXT), 'HH24:MI') AS DGEM_TM,
								   PLC_CLSS_CD AS DGEM_HIST_STAT_CD,
								   FN_GETCDNM('PLC_CLSS_CD', PLC_CLSS_CD) AS DGEM_HIST_STAT_NM
						FROM        TS_STDT_LOC_HIST
						WHERE       1=1
						AND         OCCR_DTTM BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT) /* 사실 최근 이력 가져오는 것이라 기간은 없어야 하지만.. */
						AND         PLC_CLSS_CD = 'DZONE'
						ORDER BY    OCCR_DTTM DESC
						LIMIT       11
						)
						UNION ALL
						(
						SELECT     TO_CHAR(TO_DATE(DGEM_DT, 'YYYYMMDD'::TEXT), 'MM/DD') AS DGEM_DT,
								   TO_CHAR(TO_TIMESTAMP(DGEM_TM, 'HH24MISS'::TEXT), 'HH24:MI') AS DGEM_TM,
								   ACT_DIV_CD AS DGEM_HIST_STAT_CD,
								   FN_GETCDNM('ACT_DIV_CD', ACT_DIV_CD) AS DGEM_HIST_STAT_NM
						FROM        TS_STDT_DGEM_HIST TSDH
						WHERE       1=1
						AND         TSDH.DGEM_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT) /* 사실 최근 이력 가져오는 것이라 기간은 없어야 하지만.. */
						AND         ACT_DIV_CD = 'FALL'
						ORDER BY    TSDH.DGEM_DT DESC, TSDH.DGEM_TM DESC
						LIMIT       11
						)
						UNION ALL
						(
						SELECT     TO_CHAR(TO_DATE(DGEM_DT, 'YYYYMMDD'::TEXT), 'MM/DD') AS DGEM_DT,
								   TO_CHAR(TO_TIMESTAMP(DGEM_TM, 'HH24MISS'::TEXT), 'HH24:MI') AS DGEM_TM,
								   HBIT_STAT_CD AS DGEM_HIST_STAT_CD,
								   FN_GETCDNM('HBIT_STAT_CD', HBIT_STAT_CD) AS DGEM_HIST_STAT_NM
						FROM        TS_STDT_DGEM_HIST TSDH
						WHERE       1=1
						AND         TSDH.DGEM_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT) /* 사실 최근 이력 가져오는 것이라 기간은 없어야 하지만.. */
						AND         HBIT_STAT_CD IN ('VSLOW', 'VFAST')
						ORDER BY    TSDH.DGEM_DT DESC, TSDH.DGEM_TM DESC
						LIMIT       11
						)
						UNION ALL
						(
						SELECT     TO_CHAR(TO_DATE(DGEM_DT, 'YYYYMMDD'::TEXT), 'MM/DD') AS DGEM_DT,
								   TO_CHAR(TO_TIMESTAMP(DGEM_TM, 'HH24MISS'::TEXT), 'HH24:MI') AS DGEM_TM,
								   TEMP_STAT_CD AS DGEM_HIST_STAT_CD,
								   FN_GETCDNM('TEMP_STAT_CD', TEMP_STAT_CD) AS DGEM_HIST_STAT_NM
						FROM        TS_STDT_DGEM_HIST TSDH
						WHERE       1=1
						AND         TSDH.DGEM_DT BETWEEN TO_CHAR(NOW() - INTERVAL '3 MONTH' , 'YYYYMMDD'::TEXT) AND TO_CHAR(NOW(), 'YYYYMMDD'::TEXT) /* 사실 최근 이력 가져오는 것이라 기간은 없어야 하지만.. */
						AND         TEMP_STAT_CD IN ('VLOW', 'VHIGH')
						ORDER BY    TSDH.DGEM_DT DESC, TSDH.DGEM_TM DESC
						LIMIT       11
						)
					) ABNM_HIST
		WHERE       1=1
		ORDER BY    DGEM_DT DESC, DGEM_TM DESC
		LIMIT       11
	</select>

	<!-- 종합관제현황_위험감정_이력_조회_임시 -->
	<select id="searchTotMonStatDgemHistTemp" parameterType="java.util.Map" resultType="MybatisMap">
		SELECT		TO_CHAR(TO_DATE(DGEM_DT, 'YYYYMMDD'::TEXT), 'MM/DD') AS DGEM_DT,
					  TO_CHAR(TO_TIMESTAMP(DGEM_TM, 'HH24MISS'::TEXT), 'AM HH12:MI') AS DGEM_TM,
					  DGEM_STAT_CD,
					  FN_GETCDNM('DGEM_STAT_CD', DGEM_STAT_CD) AS DGEM_STAT_NM
		FROM		TS_STDT_DGEM_HIST TSDH
		WHERE		1 = 1
		ORDER BY	DGEM_DT DESC, DGEM_TM DESC
			LIMIT 		11
	</select>

	<!-- 종합관제현황_메뉴_리스트_조회 -->
	<select id="searchTotMonStatMenuList" parameterType="java.util.Map" resultType="MybatisMap">
		SELECT 	A.MENU_NO,
			 	A.MENU_NM,
			 	A.MENU_URL
		FROM   	TC_MENU_BASE A
			   	INNER JOIN TC_MENU_ROLE C
				ON  C.MENU_NO = A.MENU_NO
			   	INNER JOIN TC_USER_ROLE D
			  	ON  D.ROLE_CD = C.ROLE_CD
		WHERE  	1 = 1
		AND    	A.USE_YN  = 'Y'
		AND    	D.USER_ID = #{userId}
		AND    	A.MENU_URL IS NOT NULL
		ORDER BY A.MENU_NO
	</select>

</mapper>