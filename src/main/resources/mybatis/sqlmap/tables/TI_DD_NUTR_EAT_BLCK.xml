<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	ti_dd_nutr_eat_blck [TI_일_영양소_섭취_구간] Mapper
	Generated by Hubble
-->
<mapper namespace="TI_DD_NUTR_EAT_BLCK">

	<select id="select" resultMap="SYS.defaultMap">
		/* Generated SQL SQL ID : ti_dd_nutr_eat_blck.select */
		SELECT 
               sex_cd /* sex_cd 성별_코드 character varying(20) */
             , nutr_cd /* nutr_cd 영양소_코드 character varying(20) */
             , age_ycnt_fr /* age_ycnt_fr 나이_년수_FROM numeric */
             , age_ycnt_to /* age_ycnt_to 나이_년수_TO numeric */
             , eat_qty_fr /* eat_qty_fr 섭취_량_FROM numeric */
             , eat_qty_to /* eat_qty_to 섭취_량_TO character(18) */
             , nutr_stat_cd /* nutr_stat_cd 영양섭취_상태_코드 character varying(4000) */
             , reg_dt /* reg_dt 등록_일자 character(8) */
             , reg_tm /* reg_tm 등록_시각 character(6) */
             , reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
             , upt_dt /* upt_dt 수정_일자 character(8) */
             , upt_tm /* upt_tm 수정_시각 character(6) */
             , upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
        FROM   ti_dd_nutr_eat_blck
		WHERE
		       sex_cd = #{sexCd} /* sex_cd 성별_코드 character varying(20) */
		AND    nutr_cd = #{nutrCd} /* nutr_cd 영양소_코드 character varying(20) */
		AND    age_ycnt_fr = #{ageYcntFr} /* age_ycnt_fr 나이_년수_FROM numeric */
		AND    age_ycnt_to = #{ageYcntTo} /* age_ycnt_to 나이_년수_TO numeric */
		AND    eat_qty_fr = #{eatQtyFr} /* eat_qty_fr 섭취_량_FROM numeric */
	</select>

	<insert id="insert" >
		/* Generated SQL SQL ID : ti_dd_nutr_eat_blck.insert */
		INSERT INTO ti_dd_nutr_eat_blck (
		  sex_cd /* sex_cd 성별_코드 character varying(20) */
		, nutr_cd /* nutr_cd 영양소_코드 character varying(20) */
		, age_ycnt_fr /* age_ycnt_fr 나이_년수_FROM numeric */
		, age_ycnt_to /* age_ycnt_to 나이_년수_TO numeric */
		, eat_qty_fr /* eat_qty_fr 섭취_량_FROM numeric */
		<if test="eatQtyTo != null">
		, eat_qty_to /* eat_qty_to 섭취_량_TO character(18) */
		</if>
		<if test="nutrStatCd != null">
		, nutr_stat_cd /* nutr_stat_cd 영양섭취_상태_코드 character varying(4000) */
		</if>
		, reg_dt /* reg_dt 등록_일자 character(8) */
		, reg_tm /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		, reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		, upt_dt /* upt_dt 수정_일자 character(8) */
		, upt_tm /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		, upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		) VALUES (
		  #{sexCd} /* sex_cd 성별_코드 character varying(20) */
		  #{nutrCd} /* nutr_cd 영양소_코드 character varying(20) */
		  #{ageYcntFr} /* age_ycnt_fr 나이_년수_FROM numeric */
		  #{ageYcntTo} /* age_ycnt_to 나이_년수_TO numeric */
		  #{eatQtyFr} /* eat_qty_fr 섭취_량_FROM numeric */
		<if test="eatQtyTo != null">
		, #{eatQtyTo} /* eat_qty_to 섭취_량_TO character(18) */
		</if>
		<if test="nutrStatCd != null">
		, #{nutrStatCd} /* nutr_stat_cd 영양섭취_상태_코드 character varying(4000) */
		</if>
		, to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */ 
		, to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		, #{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		, to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */ 
		, to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		, #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		)
	</insert>
	
	<update id="update" >
		/* Generated SQL SQL ID : ti_dd_nutr_eat_blck.update */
		UPDATE ti_dd_nutr_eat_blck
		<trim prefix="SET" prefixOverrides=",">
		<if test="eatQtyTo != null">
		, eat_qty_to = #{eatQtyTo} /* eat_qty_to 섭취_량_TO character(18) */
		</if>
		<if test="nutrStatCd != null">
		, nutr_stat_cd = #{nutrStatCd} /* nutr_stat_cd 영양섭취_상태_코드 character varying(4000) */
		</if>
		, upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		, upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		, upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
		WHERE
		sex_cd = #{sexCd} /* sex_cd 성별_코드 character varying(20) */
		AND    nutr_cd = #{nutrCd} /* nutr_cd 영양소_코드 character varying(20) */
		AND    age_ycnt_fr = #{ageYcntFr} /* age_ycnt_fr 나이_년수_FROM numeric */
		AND    age_ycnt_to = #{ageYcntTo} /* age_ycnt_to 나이_년수_TO numeric */
		AND    eat_qty_fr = #{eatQtyFr} /* eat_qty_fr 섭취_량_FROM numeric */
	</update>
	
	<update id="merge" >
		/* Generated SQL SQL ID : ti_dd_nutr_eat_blck.merge */
		INSERT INTO ti_dd_nutr_eat_blck (
		  sex_cd /* sex_cd 성별_코드 character varying(20) */
		  nutr_cd /* nutr_cd 영양소_코드 character varying(20) */
		  age_ycnt_fr /* age_ycnt_fr 나이_년수_FROM numeric */
		  age_ycnt_to /* age_ycnt_to 나이_년수_TO numeric */
		  eat_qty_fr /* eat_qty_fr 섭취_량_FROM numeric */
		<if test="eatQtyTo != null">
		, eat_qty_to /* eat_qty_to 섭취_량_TO character(18) */
		</if>
		<if test="nutrStatCd != null">
		, nutr_stat_cd /* nutr_stat_cd 영양섭취_상태_코드 character varying(4000) */
		</if>
		, reg_dt /* reg_dt 등록_일자 character(8) */
		, reg_tm /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		, reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		, upt_dt /* upt_dt 수정_일자 character(8) */
		, upt_tm /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		, upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		) VALUES (
		  #{sexCd} /* sex_cd 성별_코드 character varying(20) */
		  #{nutrCd} /* nutr_cd 영양소_코드 character varying(20) */
		  #{ageYcntFr} /* age_ycnt_fr 나이_년수_FROM numeric */
		  #{ageYcntTo} /* age_ycnt_to 나이_년수_TO numeric */
		  #{eatQtyFr} /* eat_qty_fr 섭취_량_FROM numeric */
		<if test="eatQtyTo != null">
		, #{eatQtyTo} /* eat_qty_to 섭취_량_TO character(18) */
		</if>
		<if test="nutrStatCd != null">
		, #{nutrStatCd} /* nutr_stat_cd 영양섭취_상태_코드 character varying(4000) */
		</if>
		, to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */
		, to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		, #{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		, to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		, to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		, #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		)
		ON CONFLICT
		DO UPDATE
		<trim prefix="" prefixOverrides=",">
		<if test="eatQtyTo != null">
		, eat_qty_to = #{eatQtyTo} /* eat_qty_to 섭취_량_TO character(18) */
		</if>
		<if test="nutrStatCd != null">
		, nutr_stat_cd = #{nutrStatCd} /* nutr_stat_cd 영양섭취_상태_코드 character varying(4000) */
		</if>
		, upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		, upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		, upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
	</update>
	
	<delete id="delete" >
		/* Generated SQL SQL ID : ti_dd_nutr_eat_blck.delete */
		DELETE FROM ti_dd_nutr_eat_blck
		WHERE
		sex_cd = #{sexCd} /* sex_cd 성별_코드 character varying(20) */
		AND    nutr_cd = #{nutrCd} /* nutr_cd 영양소_코드 character varying(20) */
		AND    age_ycnt_fr = #{ageYcntFr} /* age_ycnt_fr 나이_년수_FROM numeric */
		AND    age_ycnt_to = #{ageYcntTo} /* age_ycnt_to 나이_년수_TO numeric */
		AND    eat_qty_fr = #{eatQtyFr} /* eat_qty_fr 섭취_량_FROM numeric */
	</delete>
</mapper>