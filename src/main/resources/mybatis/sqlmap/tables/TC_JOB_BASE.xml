<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	tc_job_base [TC_작업_기본] Mapper
	Generated by Hubble
-->
<mapper namespace="TC_JOB_BASE">

	<select id="select" resultType="kr.co.seculink.domain.vo.TcJobBaseVo">
		/* Generated SQL SQL ID : tc_job_base.select */
        SELECT  job_id /* job_id 작업_ID character varying(20) */
               ,job_nm /* job_nm 작업_명 character varying(100) */
               ,rmrk /* rmrk 비고 text */
               ,job_hist_no /* job_hist_no 작업_이력_번호 numeric */
               ,reg_dt /* reg_dt 등록_일자 character(18) */
               ,reg_tm /* reg_tm 등록_시각 character(18) */
               ,reg_user_id /* reg_user_id 등록_사용자_ID character(9999) */
               ,upt_dt /* upt_dt 수정_일자 character(18) */
               ,upt_tm /* upt_tm 수정_시각 character(18) */
               ,upt_user_id /* upt_user_id 수정_사용자_ID character(9999) */
        FROM   tc_job_base
		WHERE  1 = 1
		AND    job_id = #{jobId} /* job_id 작업_ID character varying(20) */
	</select>

	<insert id="insert" >
		/* Generated SQL SQL ID : tc_job_base.insert */
		INSERT INTO tc_job_base
		(
		     job_id /* job_id 작업_ID character varying(20) */
		<if test="jobNm != null">
		    ,job_nm /* job_nm 작업_명 character varying(100) */
		</if>
		<if test="rmrk != null">
		    ,rmrk /* rmrk 비고 text */
		</if>
		<if test="jobHistNo != null">
		    ,job_hist_no /* job_hist_no 작업_이력_번호 numeric */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(18) */
		    ,reg_tm /* reg_tm 등록_시각 character(18) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character(9999) */
		    ,upt_dt /* upt_dt 수정_일자 character(18) */
		    ,upt_tm /* upt_tm 수정_시각 character(18) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character(9999) */
		)
		VALUES
		(
		     #{jobId} /* job_id 작업_ID character varying(20) */
		<if test="jobNm != null">
		    ,#{jobNm} /* job_nm 작업_명 character varying(100) */
		</if>
		<if test="rmrk != null">
		    ,#{rmrk} /* rmrk 비고 text */
		</if>
		<if test="jobHistNo != null">
		    ,#{jobHistNo} /* job_hist_no 작업_이력_번호 numeric */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(18) */ 
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(18) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character(9999) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(18) */ 
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(18) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character(9999) */
		)
	</insert>
	
	<update id="update">
		/* Generated SQL SQL ID : tc_job_base.update */
		UPDATE tc_job_base
		<trim prefix="SET" prefixOverrides=",">
		<if test="jobNm != null">
		    ,job_nm = #{jobNm} /* job_nm 작업_명 character varying(100) */
		</if>
		<if test="rmrk != null">
		    ,rmrk = #{rmrk} /* rmrk 비고 text */
		</if>
		<if test="jobHistNo != null">
		    ,job_hist_no = #{jobHistNo} /* job_hist_no 작업_이력_번호 numeric */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(18) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(18) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character(9999) */
		</if>
		</trim>
		WHERE  1 = 1
		AND    job_id = #{jobId} /* job_id 작업_ID character varying(20) */
	</update>
	
	<update id="merge" >
		/* Generated SQL SQL ID : tc_job_base.merge */
		INSERT INTO tc_job_base
		(
		     job_id /* job_id 작업_ID character varying(20) */
		<if test="jobNm != null">
		    ,job_nm /* job_nm 작업_명 character varying(100) */
		</if>
		<if test="rmrk != null">
		    ,rmrk /* rmrk 비고 text */
		</if>
		<if test="jobHistNo != null">
		    ,job_hist_no /* job_hist_no 작업_이력_번호 numeric */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(18) */
		    ,reg_tm /* reg_tm 등록_시각 character(18) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character(9999) */
		    ,upt_dt /* upt_dt 수정_일자 character(18) */
		    ,upt_tm /* upt_tm 수정_시각 character(18) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character(9999) */
		)
		VALUES
		(
		     #{jobId} /* job_id 작업_ID character varying(20) */
		<if test="jobNm != null">
		    ,#{jobNm} /* job_nm 작업_명 character varying(100) */
		</if>
		<if test="rmrk != null">
		    ,#{rmrk} /* rmrk 비고 text */
		</if>
		<if test="jobHistNo != null">
		    ,#{jobHistNo} /* job_hist_no 작업_이력_번호 numeric */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(18) */
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(18) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character(9999) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(18) */
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(18) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character(9999) */
		)
		ON CONFLICT
		DO UPDATE
		<trim prefix="" prefixOverrides=",">
		<if test="jobNm != null">
		    ,job_nm = #{jobNm} /* job_nm 작업_명 character varying(100) */
		</if>
		<if test="rmrk != null">
		    ,rmrk = #{rmrk} /* rmrk 비고 text */
		</if>
		<if test="jobHistNo != null">
		    ,job_hist_no = #{jobHistNo} /* job_hist_no 작업_이력_번호 numeric */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(18) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(18) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character(9999) */
		</if>
		</trim>
	</update>
	
	<delete id="delete">
		/* Generated SQL SQL ID : tc_job_base.delete */
		DELETE FROM tc_job_base
		WHERE  1 = 1
		AND    job_id = #{jobId} /* job_id 작업_ID character varying(20) */
	</delete>
</mapper>