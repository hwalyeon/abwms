<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	ts_dd_hbit_hist [TS_일별_심박_이력] Mapper
	Generated by Hubble
-->
<mapper namespace="TS_DD_HBIT_HIST">

	<select id="select" resultType="kr.co.seculink.domain.vo.TsDdHbitHistVo">
		/* Generated SQL SQL ID : ts_dd_hbit_hist.select */
        SELECT  stdt_no /* stdt_no 학생_번호 numeric */
               ,stnd_dt /* stnd_dt 기준_일자 character(8) */
               ,mesu_cnt /* mesu_cnt 측정_건수 numeric */
               ,max_hbit_cnt /* max_hbit_cnt 최대_심박_수 numeric */
               ,min_hbit_cnt /* min_hbit_cnt 최소_심박_수 numeric */
               ,hbit_mdan /* hbit_mdan 심박_중간값 numeric */
               ,vald_yn /* vald_yn 유효_여부 character(1) */
               ,accu_avg_val /* accu_avg_val 누적_평균_값 numeric */
               ,accu_sdev_val /* accu_sdev_val 누적_표준편차_값 numeric */
               ,down_stnd_val /* down_stnd_val 하위_기준_값 numeric */
               ,uppr_stnd_val /* uppr_stnd_val 상위_기준_값 numeric */
               ,bot_blck_val /* bot_blck_val 최하위_구간_값 numeric */
               ,down_blck_val /* down_blck_val 하위_구간_값 numeric */
               ,uppr_blck_val /* uppr_blck_val 상위_구간_값 numeric */
               ,top_blck_val /* top_blck_val 최상위_구간_값 numeric */
               ,reg_dt /* reg_dt 등록_일자 character(8) */
               ,reg_tm /* reg_tm 등록_시각 character(6) */
               ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
               ,upt_dt /* upt_dt 수정_일자 character(8) */
               ,upt_tm /* upt_tm 수정_시각 character(6) */
               ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
        FROM   ts_dd_hbit_hist
		WHERE  1 = 1
		AND    stdt_no = #{stdtNo} /* stdt_no 학생_번호 numeric */
		AND    stnd_dt = #{stndDt} /* stnd_dt 기준_일자 character(8) */
	</select>

	<insert id="insert"  >
		/* Generated SQL SQL ID : ts_dd_hbit_hist.insert */
		INSERT INTO ts_dd_hbit_hist
		(
		     stdt_no /* stdt_no 학생_번호 numeric */
		    ,stnd_dt /* stnd_dt 기준_일자 character(8) */
		    ,mesu_cnt /* mesu_cnt 측정_건수 numeric */
		    ,max_hbit_cnt /* max_hbit_cnt 최대_심박_수 numeric */
		    ,min_hbit_cnt /* min_hbit_cnt 최소_심박_수 numeric */
		    ,hbit_mdan /* hbit_mdan 심박_중간값 numeric */
		    ,vald_yn /* vald_yn 유효_여부 character(1) */
		    ,accu_avg_val /* accu_avg_val 누적_평균_값 numeric */
		    ,accu_sdev_val /* accu_sdev_val 누적_표준편차_값 numeric */
		    ,down_stnd_val /* down_stnd_val 하위_기준_값 numeric */
		    ,uppr_stnd_val /* uppr_stnd_val 상위_기준_값 numeric */
		    ,bot_blck_val /* bot_blck_val 최하위_구간_값 numeric */
		    ,down_blck_val /* down_blck_val 하위_구간_값 numeric */
		    ,uppr_blck_val /* uppr_blck_val 상위_구간_값 numeric */
		    ,top_blck_val /* top_blck_val 최상위_구간_값 numeric */
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		)
		VALUES
		(
		     #{stdtNo} /* stdt_no 학생_번호 numeric */
		     ,#{stndDt} /* stnd_dt 기준_일자 character(8) */
		    ,#{mesuCnt} /* mesu_cnt 측정_건수 numeric */
		    ,#{maxHbitCnt} /* max_hbit_cnt 최대_심박_수 numeric */
		    ,#{minHbitCnt} /* min_hbit_cnt 최소_심박_수 numeric */
		    ,#{hbitMdan} /* hbit_mdan 심박_중간값 numeric */
		    ,#{valdYn} /* vald_yn 유효_여부 character(1) */
		    ,#{accuAvgVal} /* accu_avg_val 누적_평균_값 numeric */
		    ,#{accuSdevVal} /* accu_sdev_val 누적_표준편차_값 numeric */
		    ,#{downStndVal} /* down_stnd_val 하위_기준_값 numeric */
		    ,#{upprStndVal} /* uppr_stnd_val 상위_기준_값 numeric */
		    ,#{botBlckVal} /* bot_blck_val 최하위_구간_값 numeric */
		    ,#{downBlckVal} /* down_blck_val 하위_구간_값 numeric */
		    ,#{upprBlckVal} /* uppr_blck_val 상위_구간_값 numeric */
		    ,#{topBlckVal} /* top_blck_val 최상위_구간_값 numeric */
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		)
	</insert>
	
	<update id="update" >
		/* Generated SQL SQL ID : ts_dd_hbit_hist.update */
		UPDATE ts_dd_hbit_hist
		<trim prefix="SET" prefixOverrides=",">
		<if test="mesuCnt != null">
		    ,mesu_cnt = #{mesuCnt} /* mesu_cnt 측정_건수 numeric */
		</if>
		<if test="maxHbitCnt != null">
		    ,max_hbit_cnt = #{maxHbitCnt} /* max_hbit_cnt 최대_심박_수 numeric */
		</if>
		<if test="minHbitCnt != null">
		    ,min_hbit_cnt = #{minHbitCnt} /* min_hbit_cnt 최소_심박_수 numeric */
		</if>
		<if test="hbitMdan != null">
		    ,hbit_mdan = #{hbitMdan} /* hbit_mdan 심박_중간값 numeric */
		</if>
		<if test="valdYn != null">
		    ,vald_yn = #{valdYn} /* vald_yn 유효_여부 character(1) */
		</if>
		<if test="accuAvgVal != null">
		    ,accu_avg_val = #{accuAvgVal} /* accu_avg_val 누적_평균_값 numeric */
		</if>
		<if test="accuSdevVal != null">
		    ,accu_sdev_val = #{accuSdevVal} /* accu_sdev_val 누적_표준편차_값 numeric */
		</if>
		<if test="downStndVal != null">
		    ,down_stnd_val = #{downStndVal} /* down_stnd_val 하위_기준_값 numeric */
		</if>
		<if test="upprStndVal != null">
		    ,uppr_stnd_val = #{upprStndVal} /* uppr_stnd_val 상위_기준_값 numeric */
		</if>
		<if test="botBlckVal != null">
		    ,bot_blck_val = #{botBlckVal} /* bot_blck_val 최하위_구간_값 numeric */
		</if>
		<if test="downBlckVal != null">
		    ,down_blck_val = #{downBlckVal} /* down_blck_val 하위_구간_값 numeric */
		</if>
		<if test="upprBlckVal != null">
		    ,uppr_blck_val = #{upprBlckVal} /* uppr_blck_val 상위_구간_값 numeric */
		</if>
		<if test="topBlckVal != null">
		    ,top_blck_val = #{topBlckVal} /* top_blck_val 최상위_구간_값 numeric */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
		WHERE  1 = 1
		AND    stdt_no = #{stdtNo} /* stdt_no 학생_번호 numeric */
		AND    stnd_dt = #{stndDt} /* stnd_dt 기준_일자 character(8) */
	</update>
	
	<update id="merge" >
		/* Generated SQL SQL ID : ts_dd_hbit_hist.merge */
		INSERT INTO ts_dd_hbit_hist
		(
		     stdt_no /* stdt_no 학생_번호 numeric */
		     stnd_dt /* stnd_dt 기준_일자 character(8) */
		    ,mesu_cnt /* mesu_cnt 측정_건수 numeric */
		    ,max_hbit_cnt /* max_hbit_cnt 최대_심박_수 numeric */
		    ,min_hbit_cnt /* min_hbit_cnt 최소_심박_수 numeric */
		    ,hbit_mdan /* hbit_mdan 심박_중간값 numeric */
		    ,vald_yn /* vald_yn 유효_여부 character(1) */
		    ,accu_avg_val /* accu_avg_val 누적_평균_값 numeric */
		    ,accu_sdev_val /* accu_sdev_val 누적_표준편차_값 numeric */
		    ,down_stnd_val /* down_stnd_val 하위_기준_값 numeric */
		    ,uppr_stnd_val /* uppr_stnd_val 상위_기준_값 numeric */
		    ,bot_blck_val /* bot_blck_val 최하위_구간_값 numeric */
		    ,down_blck_val /* down_blck_val 하위_구간_값 numeric */
		    ,uppr_blck_val /* uppr_blck_val 상위_구간_값 numeric */
		    ,top_blck_val /* top_blck_val 최상위_구간_값 numeric */
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		)
		VALUES
		(
		     #{stdtNo} /* stdt_no 학생_번호 numeric */
		     #{stndDt} /* stnd_dt 기준_일자 character(8) */
		    ,#{mesuCnt} /* mesu_cnt 측정_건수 numeric */
		    ,#{maxHbitCnt} /* max_hbit_cnt 최대_심박_수 numeric */
		    ,#{minHbitCnt} /* min_hbit_cnt 최소_심박_수 numeric */
		    ,#{hbitMdan} /* hbit_mdan 심박_중간값 numeric */
		    ,#{valdYn} /* vald_yn 유효_여부 character(1) */
		    ,#{accuAvgVal} /* accu_avg_val 누적_평균_값 numeric */
		    ,#{accuSdevVal} /* accu_sdev_val 누적_표준편차_값 numeric */
		    ,#{downStndVal} /* down_stnd_val 하위_기준_값 numeric */
		    ,#{upprStndVal} /* uppr_stnd_val 상위_기준_값 numeric */
		    ,#{botBlckVal} /* bot_blck_val 최하위_구간_값 numeric */
		    ,#{downBlckVal} /* down_blck_val 하위_구간_값 numeric */
		    ,#{upprBlckVal} /* uppr_blck_val 상위_구간_값 numeric */
		    ,#{topBlckVal} /* top_blck_val 최상위_구간_값 numeric */
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		<if test="regUserId != null">
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		)
		ON CONFLICT CONSTRAINT ts_dd_hbit_hist_pkey
		DO UPDATE SET
		<trim prefix="" prefixOverrides=",">
		<if test="mesuCnt != null">
		    ,mesu_cnt = #{mesuCnt} /* mesu_cnt 측정_건수 numeric */
		</if>
		<if test="maxHbitCnt != null">
		    ,max_hbit_cnt = #{maxHbitCnt} /* max_hbit_cnt 최대_심박_수 numeric */
		</if>
		<if test="minHbitCnt != null">
		    ,min_hbit_cnt = #{minHbitCnt} /* min_hbit_cnt 최소_심박_수 numeric */
		</if>
		<if test="hbitMdan != null">
		    ,hbit_mdan = #{hbitMdan} /* hbit_mdan 심박_중간값 numeric */
		</if>
		<if test="valdYn != null">
		    ,vald_yn = #{valdYn} /* vald_yn 유효_여부 character(1) */
		</if>
		<if test="accuAvgVal != null">
		    ,accu_avg_val = #{accuAvgVal} /* accu_avg_val 누적_평균_값 numeric */
		</if>
		<if test="accuSdevVal != null">
		    ,accu_sdev_val = #{accuSdevVal} /* accu_sdev_val 누적_표준편차_값 numeric */
		</if>
		<if test="downStndVal != null">
		    ,down_stnd_val = #{downStndVal} /* down_stnd_val 하위_기준_값 numeric */
		</if>
		<if test="upprStndVal != null">
		    ,uppr_stnd_val = #{upprStndVal} /* uppr_stnd_val 상위_기준_값 numeric */
		</if>
		<if test="botBlckVal != null">
		    ,bot_blck_val = #{botBlckVal} /* bot_blck_val 최하위_구간_값 numeric */
		</if>
		<if test="downBlckVal != null">
		    ,down_blck_val = #{downBlckVal} /* down_blck_val 하위_구간_값 numeric */
		</if>
		<if test="upprBlckVal != null">
		    ,uppr_blck_val = #{upprBlckVal} /* uppr_blck_val 상위_구간_값 numeric */
		</if>
		<if test="topBlckVal != null">
		    ,top_blck_val = #{topBlckVal} /* top_blck_val 최상위_구간_값 numeric */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
	</update>
	
	<delete id="delete">
		/* Generated SQL SQL ID : ts_dd_hbit_hist.delete */
		DELETE FROM ts_dd_hbit_hist
		WHERE  1 = 1
		AND    stdt_no = #{stdtNo} /* stdt_no 학생_번호 numeric */
		AND    stnd_dt = #{stndDt} /* stnd_dt 기준_일자 character(8) */
	</delete>
</mapper>
