<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	tt_guar_dzone_stss [TT_보호자_위험지역_통계] Mapper
	Generated by Hubble
-->
<mapper namespace="TT_GUAR_DZONE_STSS">

	<select id="select" resultType="kr.co.seculink.domain.vo.TtGuarDzoneStssVo">
		/* Generated SQL SQL ID : tt_guar_dzone_stss.select */
        SELECT  stnd_dt /* stnd_dt 기준_일자 character(8) */
               ,plc_clss_cd /* plc_clss_cd 장소_분류_코드 character varying(20) */
               ,lat_val /* lat_val 위도_값 numeric */
               ,lon_val /* lon_val 경도_값 numeric */
               ,near_addr /* near_addr 인근_주소 character varying(200) */
               ,dup_apnt_cnt /* dup_apnt_cnt 중복_지정_건수 numeric */
               ,addr_head_1 /* addr_head_1 주소_헤더_1 character varying(30) */
               ,addr_head_2 /* addr_head_2 주소_헤더_2 character varying(30) */
        FROM   tt_guar_dzone_stss
		WHERE  1 = 1
		AND    stnd_dt = #{stndDt} /* stnd_dt 기준_일자 character(8) */
		AND    plc_clss_cd = #{plcClssCd} /* plc_clss_cd 장소_분류_코드 character varying(20) */
		AND    lat_val = #{latVal} /* lat_val 위도_값 numeric */
		AND    lon_val = #{lonVal} /* lon_val 경도_값 numeric */
	</select>

	<insert id="insert"  >
		/* Generated SQL SQL ID : tt_guar_dzone_stss.insert */
		INSERT INTO tt_guar_dzone_stss
		(
		     stnd_dt /* stnd_dt 기준_일자 character(8) */
		    ,plc_clss_cd /* plc_clss_cd 장소_분류_코드 character varying(20) */
		    ,lat_val /* lat_val 위도_값 numeric */
		    ,lon_val /* lon_val 경도_값 numeric */
		<if test="nearAddr != null">
		    ,near_addr /* near_addr 인근_주소 character varying(200) */
		</if>
		    ,dup_apnt_cnt /* dup_apnt_cnt 중복_지정_건수 numeric */
		<if test="addrHead1 != null">
		    ,addr_head_1 /* addr_head_1 주소_헤더_1 character varying(30) */
		</if>
		<if test="addrHead2 != null">
		    ,addr_head_2 /* addr_head_2 주소_헤더_2 character varying(30) */
		</if>
		)
		VALUES
		(
		     #{stndDt} /* stnd_dt 기준_일자 character(8) */
		     ,#{plcClssCd} /* plc_clss_cd 장소_분류_코드 character varying(20) */
		     ,#{latVal} /* lat_val 위도_값 numeric */
		     ,#{lonVal} /* lon_val 경도_값 numeric */
		<if test="nearAddr != null">
		    ,#{nearAddr} /* near_addr 인근_주소 character varying(200) */
		</if>
		    ,#{dupApntCnt} /* dup_apnt_cnt 중복_지정_건수 numeric */
		<if test="addrHead1 != null">
		    ,#{addrHead1} /* addr_head_1 주소_헤더_1 character varying(30) */
		</if>
		<if test="addrHead2 != null">
		    ,#{addrHead2} /* addr_head_2 주소_헤더_2 character varying(30) */
		</if>
		)
	</insert>
	
	<update id="update" >
		/* Generated SQL SQL ID : tt_guar_dzone_stss.update */
		UPDATE tt_guar_dzone_stss
		<trim prefix="SET" prefixOverrides=",">
		<if test="nearAddr != null">
		    ,near_addr = #{nearAddr} /* near_addr 인근_주소 character varying(200) */
		</if>
		<if test="dupApntCnt != null">
		    ,dup_apnt_cnt = #{dupApntCnt} /* dup_apnt_cnt 중복_지정_건수 numeric */
		</if>
		<if test="addrHead1 != null">
		    ,addr_head_1 = #{addrHead1} /* addr_head_1 주소_헤더_1 character varying(30) */
		</if>
		<if test="addrHead2 != null">
		    ,addr_head_2 = #{addrHead2} /* addr_head_2 주소_헤더_2 character varying(30) */
		</if>
		</trim>
		WHERE  1 = 1
		AND    stnd_dt = #{stndDt} /* stnd_dt 기준_일자 character(8) */
		AND    plc_clss_cd = #{plcClssCd} /* plc_clss_cd 장소_분류_코드 character varying(20) */
		AND    lat_val = #{latVal} /* lat_val 위도_값 numeric */
		AND    lon_val = #{lonVal} /* lon_val 경도_값 numeric */
	</update>
	
	<update id="merge" >
		/* Generated SQL SQL ID : tt_guar_dzone_stss.merge */
		INSERT INTO tt_guar_dzone_stss
		(
		     stnd_dt /* stnd_dt 기준_일자 character(8) */
		     plc_clss_cd /* plc_clss_cd 장소_분류_코드 character varying(20) */
		     lat_val /* lat_val 위도_값 numeric */
		     lon_val /* lon_val 경도_값 numeric */
		<if test="nearAddr != null">
		    ,near_addr /* near_addr 인근_주소 character varying(200) */
		</if>
		    ,dup_apnt_cnt /* dup_apnt_cnt 중복_지정_건수 numeric */
		<if test="addrHead1 != null">
		    ,addr_head_1 /* addr_head_1 주소_헤더_1 character varying(30) */
		</if>
		<if test="addrHead2 != null">
		    ,addr_head_2 /* addr_head_2 주소_헤더_2 character varying(30) */
		</if>
		)
		VALUES
		(
		     #{stndDt} /* stnd_dt 기준_일자 character(8) */
		     #{plcClssCd} /* plc_clss_cd 장소_분류_코드 character varying(20) */
		     #{latVal} /* lat_val 위도_값 numeric */
		     #{lonVal} /* lon_val 경도_값 numeric */
		<if test="nearAddr != null">
		    ,#{nearAddr} /* near_addr 인근_주소 character varying(200) */
		</if>
		    ,#{dupApntCnt} /* dup_apnt_cnt 중복_지정_건수 numeric */
		<if test="addrHead1 != null">
		    ,#{addrHead1} /* addr_head_1 주소_헤더_1 character varying(30) */
		</if>
		<if test="addrHead2 != null">
		    ,#{addrHead2} /* addr_head_2 주소_헤더_2 character varying(30) */
		</if>
		)
		ON CONFLICT CONSTRAINT tt_guar_dzone_stss_pkey
		DO UPDATE SET
		<trim prefix="" prefixOverrides=",">
		<if test="nearAddr != null">
		    ,near_addr = #{nearAddr} /* near_addr 인근_주소 character varying(200) */
		</if>
		<if test="dupApntCnt != null">
		    ,dup_apnt_cnt = #{dupApntCnt} /* dup_apnt_cnt 중복_지정_건수 numeric */
		</if>
		<if test="addrHead1 != null">
		    ,addr_head_1 = #{addrHead1} /* addr_head_1 주소_헤더_1 character varying(30) */
		</if>
		<if test="addrHead2 != null">
		    ,addr_head_2 = #{addrHead2} /* addr_head_2 주소_헤더_2 character varying(30) */
		</if>
		</trim>
	</update>
	
	<delete id="delete">
		/* Generated SQL SQL ID : tt_guar_dzone_stss.delete */
		DELETE FROM tt_guar_dzone_stss
		WHERE  1 = 1
		AND    stnd_dt = #{stndDt} /* stnd_dt 기준_일자 character(8) */
		AND    plc_clss_cd = #{plcClssCd} /* plc_clss_cd 장소_분류_코드 character varying(20) */
		AND    lat_val = #{latVal} /* lat_val 위도_값 numeric */
		AND    lon_val = #{lonVal} /* lon_val 경도_값 numeric */
	</delete>
</mapper>
