<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	ti_food_info [TI_식품_정보] Mapper
	Generated by Hubble
-->
<mapper namespace="TI_FOOD_INFO">

	<select id="select" parameterType="kr.co.seculink.domain.vo.TiFoodInfoVo" resultType="kr.co.seculink.domain.vo.TiFoodInfoVo">
		/* Generated SQL SQL ID : ti_food_info.select */
        SELECT  food_no /* food_no 식품_번호 numeric */
               ,food_lcls_nm /* food_lcls_nm 식품_대분류_명 character varying(100) */
               ,food_mcls_nm /* food_mcls_nm 식품_중분류_명 character varying(100) */
               ,food_nm /* food_nm 식품_명 character varying(100) */
               ,otim_eat_qty /* otim_eat_qty 1회_섭취_용량 numeric */
               ,eat_unit_cd /* eat_unit_cd 섭취_단위_코드 character varying(20) */
               ,reg_dt /* reg_dt 등록_일자 character(8) */
               ,reg_tm /* reg_tm 등록_시각 character(6) */
               ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
               ,upt_dt /* upt_dt 수정_일자 character(8) */
               ,upt_tm /* upt_tm 수정_시각 character(6) */
               ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
        FROM   ti_food_info
		WHERE  1 = 1
		AND    food_no = #{foodNo} /* food_no 식품_번호 numeric */
	</select>

	<insert id="insert"  parameterType="kr.co.seculink.domain.vo.TiFoodInfoVo">
		/* Generated SQL SQL ID : ti_food_info.insert */
		INSERT INTO ti_food_info
		(
		     food_no /* food_no 식품_번호 numeric */
		<if test="foodLclsNm != null">
		    ,food_lcls_nm /* food_lcls_nm 식품_대분류_명 character varying(100) */
		</if>
		<if test="foodMclsNm != null">
		    ,food_mcls_nm /* food_mcls_nm 식품_중분류_명 character varying(100) */
		</if>
		<if test="foodNm != null">
		    ,food_nm /* food_nm 식품_명 character varying(100) */
		</if>
		    ,otim_eat_qty /* otim_eat_qty 1회_섭취_용량 numeric */
		<if test="eatUnitCd != null">
		    ,eat_unit_cd /* eat_unit_cd 섭취_단위_코드 character varying(20) */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		VALUES
		(
		     #{foodNo} /* food_no 식품_번호 numeric */
		<if test="foodLclsNm != null">
		    ,#{foodLclsNm} /* food_lcls_nm 식품_대분류_명 character varying(100) */
		</if>
		<if test="foodMclsNm != null">
		    ,#{foodMclsNm} /* food_mcls_nm 식품_중분류_명 character varying(100) */
		</if>
		<if test="foodNm != null">
		    ,#{foodNm} /* food_nm 식품_명 character varying(100) */
		</if>
		    ,#{otimEatQty} /* otim_eat_qty 1회_섭취_용량 numeric */
		<if test="eatUnitCd != null">
		    ,#{eatUnitCd} /* eat_unit_cd 섭취_단위_코드 character varying(20) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		)
	</insert>
	
	<update id="update" parameterType="kr.co.seculink.domain.vo.TiFoodInfoVo">
		/* Generated SQL SQL ID : ti_food_info.update */
		UPDATE ti_food_info
		<trim prefix="SET" prefixOverrides=",">
		<if test="foodLclsNm != null">
		    ,food_lcls_nm = #{foodLclsNm} /* food_lcls_nm 식품_대분류_명 character varying(100) */
		</if>
		<if test="foodMclsNm != null">
		    ,food_mcls_nm = #{foodMclsNm} /* food_mcls_nm 식품_중분류_명 character varying(100) */
		</if>
		<if test="foodNm != null">
		    ,food_nm = #{foodNm} /* food_nm 식품_명 character varying(100) */
		</if>
		<if test="otimEatQty != null">
		    ,otim_eat_qty = #{otimEatQty} /* otim_eat_qty 1회_섭취_용량 numeric */
		</if>
		<if test="eatUnitCd != null">
		    ,eat_unit_cd = #{eatUnitCd} /* eat_unit_cd 섭취_단위_코드 character varying(20) */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
		WHERE  1 = 1
		AND    food_no = #{foodNo} /* food_no 식품_번호 numeric */
	</update>
	
	<update id="merge"  parameterType="kr.co.seculink.domain.vo.TiFoodInfoVo">
		/* Generated SQL SQL ID : ti_food_info.merge */
		INSERT INTO ti_food_info
		(
		     food_no /* food_no 식품_번호 numeric */
		<if test="foodLclsNm != null">
		    ,food_lcls_nm /* food_lcls_nm 식품_대분류_명 character varying(100) */
		</if>
		<if test="foodMclsNm != null">
		    ,food_mcls_nm /* food_mcls_nm 식품_중분류_명 character varying(100) */
		</if>
		<if test="foodNm != null">
		    ,food_nm /* food_nm 식품_명 character varying(100) */
		</if>
		    ,otim_eat_qty /* otim_eat_qty 1회_섭취_용량 numeric */
		<if test="eatUnitCd != null">
		    ,eat_unit_cd /* eat_unit_cd 섭취_단위_코드 character varying(20) */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		VALUES
		(
		     #{foodNo} /* food_no 식품_번호 numeric */
		<if test="foodLclsNm != null">
		    ,#{foodLclsNm} /* food_lcls_nm 식품_대분류_명 character varying(100) */
		</if>
		<if test="foodMclsNm != null">
		    ,#{foodMclsNm} /* food_mcls_nm 식품_중분류_명 character varying(100) */
		</if>
		<if test="foodNm != null">
		    ,#{foodNm} /* food_nm 식품_명 character varying(100) */
		</if>
		    ,#{otimEatQty} /* otim_eat_qty 1회_섭취_용량 numeric */
		<if test="eatUnitCd != null">
		    ,#{eatUnitCd} /* eat_unit_cd 섭취_단위_코드 character varying(20) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		ON CONFLICT
		DO UPDATE
		<trim prefix="" prefixOverrides=",">
		<if test="foodLclsNm != null">
		    ,food_lcls_nm = #{foodLclsNm} /* food_lcls_nm 식품_대분류_명 character varying(100) */
		</if>
		<if test="foodMclsNm != null">
		    ,food_mcls_nm = #{foodMclsNm} /* food_mcls_nm 식품_중분류_명 character varying(100) */
		</if>
		<if test="foodNm != null">
		    ,food_nm = #{foodNm} /* food_nm 식품_명 character varying(100) */
		</if>
		<if test="otimEatQty != null">
		    ,otim_eat_qty = #{otimEatQty} /* otim_eat_qty 1회_섭취_용량 numeric */
		</if>
		<if test="eatUnitCd != null">
		    ,eat_unit_cd = #{eatUnitCd} /* eat_unit_cd 섭취_단위_코드 character varying(20) */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
	</update>
	
	<delete id="delete" parameterType="kr.co.seculink.domain.vo.TiFoodInfoVo">
		/* Generated SQL SQL ID : ti_food_info.delete */
		DELETE FROM ti_food_info
		WHERE  1 = 1
		AND    food_no = #{foodNo} /* food_no 식품_번호 numeric */
	</delete>
</mapper>