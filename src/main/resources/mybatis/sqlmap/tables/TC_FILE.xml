<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	tc_file [TC_파일] Mapper
	Generated by Hubble
-->
<mapper namespace="TC_FILE">

	<select id="select" parameterType="kr.co.seculink.domain.vo.TcFileVo" resultType="kr.co.seculink.domain.vo.TcFileVo">
		/* Generated SQL SQL ID : tc_file.select */
        SELECT  file_no /* file_no 파일_번호 numeric */
               ,file_path /* file_path 파일_경로 character varying(1000) */
               ,lgic_file_nm /* lgic_file_nm 논리_파일_명 character varying(400) */
               ,pgic_file_nm /* pgic_file_nm 물리_파일_명 character varying(400) */
               ,reg_dt /* reg_dt 등록_일자 character(8) */
               ,reg_tm /* reg_tm 등록_시각 character(6) */
               ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
               ,upt_dt /* upt_dt 수정_일자 character(8) */
               ,upt_tm /* upt_tm 수정_시각 character(6) */
               ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
        FROM   tc_file
		WHERE  1 = 1
		AND    file_no = #{fileNo} /* file_no 파일_번호 numeric */
	</select>

	<insert id="insert"  parameterType="kr.co.seculink.domain.vo.TcFileVo">
		/* Generated SQL SQL ID : tc_file.insert */
		INSERT INTO tc_file
		(
		     file_no /* file_no 파일_번호 numeric */
		<if test="filePath != null">
		    ,file_path /* file_path 파일_경로 character varying(1000) */
		</if>
		<if test="lgicFileNm != null">
		    ,lgic_file_nm /* lgic_file_nm 논리_파일_명 character varying(400) */
		</if>
		<if test="pgicFileNm != null">
		    ,pgic_file_nm /* pgic_file_nm 물리_파일_명 character varying(400) */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		VALUES
		(
		     #{fileNo} /* file_no 파일_번호 numeric */
		<if test="filePath != null">
		    ,#{filePath} /* file_path 파일_경로 character varying(1000) */
		</if>
		<if test="lgicFileNm != null">
		    ,#{lgicFileNm} /* lgic_file_nm 논리_파일_명 character varying(400) */
		</if>
		<if test="pgicFileNm != null">
		    ,#{pgicFileNm} /* pgic_file_nm 물리_파일_명 character varying(400) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		)
	</insert>
	
	<update id="update" parameterType="kr.co.seculink.domain.vo.TcFileVo">
		/* Generated SQL SQL ID : tc_file.update */
		UPDATE tc_file
		<trim prefix="SET" prefixOverrides=",">
		<if test="filePath != null">
		    ,file_path = #{filePath} /* file_path 파일_경로 character varying(1000) */
		</if>
		<if test="lgicFileNm != null">
		    ,lgic_file_nm = #{lgicFileNm} /* lgic_file_nm 논리_파일_명 character varying(400) */
		</if>
		<if test="pgicFileNm != null">
		    ,pgic_file_nm = #{pgicFileNm} /* pgic_file_nm 물리_파일_명 character varying(400) */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
		WHERE  1 = 1
		AND    file_no = #{fileNo} /* file_no 파일_번호 numeric */
	</update>
	
	<update id="merge"  parameterType="kr.co.seculink.domain.vo.TcFileVo">
		/* Generated SQL SQL ID : tc_file.merge */
		INSERT INTO tc_file
		(
		     file_no /* file_no 파일_번호 numeric */
		<if test="filePath != null">
		    ,file_path /* file_path 파일_경로 character varying(1000) */
		</if>
		<if test="lgicFileNm != null">
		    ,lgic_file_nm /* lgic_file_nm 논리_파일_명 character varying(400) */
		</if>
		<if test="pgicFileNm != null">
		    ,pgic_file_nm /* pgic_file_nm 물리_파일_명 character varying(400) */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		VALUES
		(
		     #{fileNo} /* file_no 파일_번호 numeric */
		<if test="filePath != null">
		    ,#{filePath} /* file_path 파일_경로 character varying(1000) */
		</if>
		<if test="lgicFileNm != null">
		    ,#{lgicFileNm} /* lgic_file_nm 논리_파일_명 character varying(400) */
		</if>
		<if test="pgicFileNm != null">
		    ,#{pgicFileNm} /* pgic_file_nm 물리_파일_명 character varying(400) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		ON CONFLICT
		DO UPDATE
		<trim prefix="" prefixOverrides=",">
		<if test="filePath != null">
		    ,file_path = #{filePath} /* file_path 파일_경로 character varying(1000) */
		</if>
		<if test="lgicFileNm != null">
		    ,lgic_file_nm = #{lgicFileNm} /* lgic_file_nm 논리_파일_명 character varying(400) */
		</if>
		<if test="pgicFileNm != null">
		    ,pgic_file_nm = #{pgicFileNm} /* pgic_file_nm 물리_파일_명 character varying(400) */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
	</update>
	
	<delete id="delete" parameterType="kr.co.seculink.domain.vo.TcFileVo">
		/* Generated SQL SQL ID : tc_file.delete */
		DELETE FROM tc_file
		WHERE  1 = 1
		AND    file_no = #{fileNo} /* file_no 파일_번호 numeric */
	</delete>
</mapper>