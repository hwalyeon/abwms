<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	tokn_key [토큰_KEY] Mapper
	Generated by Hubble
-->
<mapper namespace="TOKN_KEY">

	<select id="select" resultType="kr.co.seculink.domain.vo.ToknKeyVo">
		/* Generated SQL SQL ID : tokn_key.select */
        SELECT  user_id /* user_id 사용자_ID character varying(40) */
               ,clnt_id /* clnt_id 클라이언트_ID character varying(20) */
               ,key_val /* key_val KEY_값 character varying(40) */
               ,reg_dt /* reg_dt 등록_일자 character(8) */
               ,reg_tm /* reg_tm 등록_시각 character(6) */
               ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
               ,upt_dt /* upt_dt 수정_일자 character(8) */
               ,upt_tm /* upt_tm 수정_시각 character(6) */
               ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
        FROM   tokn_key
		WHERE  1 = 1
		AND    user_id = #{userId} /* user_id 사용자_ID character varying(40) */
		AND    clnt_id = #{clntId} /* clnt_id 클라이언트_ID character varying(20) */
	</select>

	<insert id="insert" >
		/* Generated SQL SQL ID : tokn_key.insert */
		INSERT INTO tokn_key
		(
		     user_id /* user_id 사용자_ID character varying(40) */
		    ,clnt_id /* clnt_id 클라이언트_ID character varying(20) */
		<if test="keyVal != null">
		    ,key_val /* key_val KEY_값 character varying(40) */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		VALUES
		(
		     #{userId} /* user_id 사용자_ID character varying(40) */
		     #{clntId} /* clnt_id 클라이언트_ID character varying(20) */
		<if test="keyVal != null">
		    ,#{keyVal} /* key_val KEY_값 character varying(40) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */ 
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		)
	</insert>
	
	<update id="update">
		/* Generated SQL SQL ID : tokn_key.update */
		UPDATE tokn_key
		<trim prefix="SET" prefixOverrides=",">
		<if test="keyVal != null">
		    ,key_val = #{keyVal} /* key_val KEY_값 character varying(40) */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
		WHERE  1 = 1
		AND    user_id = #{userId} /* user_id 사용자_ID character varying(40) */
		AND    clnt_id = #{clntId} /* clnt_id 클라이언트_ID character varying(20) */
	</update>
	
	<update id="merge" >
		/* Generated SQL SQL ID : tokn_key.merge */
		INSERT INTO tokn_key
		(
		     user_id /* user_id 사용자_ID character varying(40) */
		     clnt_id /* clnt_id 클라이언트_ID character varying(20) */
		<if test="keyVal != null">
		    ,key_val /* key_val KEY_값 character varying(40) */
		</if>
		    ,reg_dt /* reg_dt 등록_일자 character(8) */
		    ,reg_tm /* reg_tm 등록_시각 character(6) */
		    ,reg_user_id /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,upt_dt /* upt_dt 수정_일자 character(8) */
		    ,upt_tm /* upt_tm 수정_시각 character(6) */
		    ,upt_user_id /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		VALUES
		(
		     #{userId} /* user_id 사용자_ID character varying(40) */
		     #{clntId} /* clnt_id 클라이언트_ID character varying(20) */
		<if test="keyVal != null">
		    ,#{keyVal} /* key_val KEY_값 character varying(40) */
		</if>
		    ,to_char(now(), 'YYYYMMDD') /* reg_dt 등록_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* reg_tm 등록_시각 character(6) */
		    ,#{regUserId} /* reg_user_id 등록_사용자_ID character varying(20) */
		    ,to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		    ,#{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		)
		ON CONFLICT
		DO UPDATE
		<trim prefix="" prefixOverrides=",">
		<if test="keyVal != null">
		    ,key_val = #{keyVal} /* key_val KEY_값 character varying(40) */
		</if>
		    ,upt_dt = to_char(now(), 'YYYYMMDD') /* upt_dt 수정_일자 character(8) */
		    ,upt_tm = to_char(now(), 'HH24MISS') /* upt_tm 수정_시각 character(6) */
		<if test="uptUserId != null">
		    ,upt_user_id = #{uptUserId} /* upt_user_id 수정_사용자_ID character varying(20) */
		</if>
		</trim>
	</update>
	
	<delete id="delete">
		/* Generated SQL SQL ID : tokn_key.delete */
		DELETE FROM tokn_key
		WHERE  1 = 1
		AND    user_id = #{userId} /* user_id 사용자_ID character varying(40) */
		AND    clnt_id = #{clntId} /* clnt_id 클라이언트_ID character varying(20) */
	</delete>
</mapper>