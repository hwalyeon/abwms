<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	ADMIN_BASE Mapper
	Generated by co.seculink
-->
<mapper namespace="ADMIN_BASE">

	<select id="select" resultMap="SYS.defaultMap">
		/* Generated SQL SQL ID : ADMIN_BASE.select */
		SELECT 
               ADMIN_ID /* ADMIN_ID 관리자_ID varchar(50) */
             , USER_NM /* USER_NM 사용자_명 varchar(10) */
             , PASS /* PASS 패스워드 varchar(256) */
             , NICK /* NICK 닉네임 varchar(10) */
             , EMAL /* EMAL 이메일 varchar(50) */
             , HP /* HP 휴대폰 varchar(15) */
             , USE_YN /* USE_YN 사용_여부 char(1) */
             , REG_USER_ID /* REG_USER_ID 등록_사용자_ID varchar(50) */
             , REG_DTTM /* REG_DTTM 등록_일시 char(14) */
             , UPT_USER_ID /* UPT_USER_ID 수정_사용자_ID varchar(50) */
             , UPT_DTTM /* UPT_DTTM 수정_일시 char(14) */
        FROM   ADMIN_BASE
		WHERE
		       ADMIN_ID = #{adminId} /* ADMIN_ID 관리자_ID varchar(50) */
	</select>

	<insert id="insert" >
		/* Generated SQL SQL ID : ADMIN_BASE.insert */
		INSERT INTO ADMIN_BASE (
		  ADMIN_ID /* ADMIN_ID 관리자_ID varchar(50) */
		<if test="userNm != null">
		, USER_NM /* USER_NM 사용자_명 varchar(10) */
		</if>
		<if test="pass != null">
		, PASS /* PASS 패스워드 varchar(256) */
		</if>
		<if test="nick != null">
		, NICK /* NICK 닉네임 varchar(10) */
		</if>
		<if test="emal != null">
		, EMAL /* EMAL 이메일 varchar(50) */
		</if>
		<if test="hp != null">
		, HP /* HP 휴대폰 varchar(15) */
		</if>
		<if test="useYn != null">
		, USE_YN /* USE_YN 사용_여부 char(1) */
		</if>
		<if test="regUserId != null">
		, REG_USER_ID /* REG_USER_ID 등록_사용자_ID varchar(50) */
		</if>
		, REG_DTTM /* REG_DTTM 등록_일시 char(14) */
		<if test="uptUserId != null">
		, UPT_USER_ID /* UPT_USER_ID 수정_사용자_ID varchar(50) */
		</if>
		, UPT_DTTM /* UPT_DTTM 수정_일시 char(14) */
		) VALUES (
		  #{adminId} /* ADMIN_ID 관리자_ID varchar(50) */
		<if test="userNm != null">
		, #{userNm} /* USER_NM 사용자_명 varchar(10) */
		</if>
		<if test="pass != null">
		, #{pass} /* PASS 패스워드 varchar(256) */
		</if>
		<if test="nick != null">
		, #{nick} /* NICK 닉네임 varchar(10) */
		</if>
		<if test="emal != null">
		, #{emal} /* EMAL 이메일 varchar(50) */
		</if>
		<if test="hp != null">
		, #{hp} /* HP 휴대폰 varchar(15) */
		</if>
		<if test="useYn != null">
		, #{useYn} /* USE_YN 사용_여부 char(1) */
		</if>
		<if test="regUserId != null">
		, #{regUserId} /* REG_USER_ID 등록_사용자_ID varchar(50) */
		</if>
		, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') /* REG_DTTM 등록_일시 char(14) */
		<if test="uptUserId != null">
		, #{uptUserId} /* UPT_USER_ID 수정_사용자_ID varchar(50) */
		</if>
		, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') /* UPT_DTTM 수정_일시 char(14) */
		)
	</insert>
	
	<update id="update" >
		/* Generated SQL SQL ID : ADMIN_BASE.update */
		UPDATE ADMIN_BASE
		<trim prefix="SET" prefixOverrides=",">
		<if test="userNm != null">
		, USER_NM = #{userNm} /* USER_NM 사용자_명 varchar(10) */
		</if>
		<if test="pass != null">
		, PASS = #{pass} /* PASS 패스워드 varchar(256) */
		</if>
		<if test="nick != null">
		, NICK = #{nick} /* NICK 닉네임 varchar(10) */
		</if>
		<if test="emal != null">
		, EMAL = #{emal} /* EMAL 이메일 varchar(50) */
		</if>
		<if test="hp != null">
		, HP = #{hp} /* HP 휴대폰 varchar(15) */
		</if>
		<if test="useYn != null">
		, USE_YN = #{useYn} /* USE_YN 사용_여부 char(1) */
		</if>
		<if test="uptUserId != null">
		, UPT_USER_ID = #{uptUserId} /* UPT_USER_ID 수정_사용자_ID varchar(50) */
		</if>
		, UPT_DTTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') /* UPT_DTTM 수정_일시 char(14) */
		</trim>
		WHERE
		ADMIN_ID = #{adminId} /* ADMIN_ID 관리자_ID varchar(50) */
	</update>
	
	<update id="merge" >
		/* Generated SQL SQL ID : ADMIN_BASE.merge */
		INSERT INTO ADMIN_BASE (
		  ADMIN_ID /* ADMIN_ID 관리자_ID varchar(50) */
		<if test="userNm != null">
		, USER_NM /* USER_NM 사용자_명 varchar(10) */
		</if>
		<if test="pass != null">
		, PASS /* PASS 패스워드 varchar(256) */
		</if>
		<if test="nick != null">
		, NICK /* NICK 닉네임 varchar(10) */
		</if>
		<if test="emal != null">
		, EMAL /* EMAL 이메일 varchar(50) */
		</if>
		<if test="hp != null">
		, HP /* HP 휴대폰 varchar(15) */
		</if>
		<if test="useYn != null">
		, USE_YN /* USE_YN 사용_여부 char(1) */
		</if>
		<if test="regUserId != null">
		, REG_USER_ID /* REG_USER_ID 등록_사용자_ID varchar(50) */
		</if>
		, REG_DTTM /* REG_DTTM 등록_일시 char(14) */
		<if test="uptUserId != null">
		, UPT_USER_ID /* UPT_USER_ID 수정_사용자_ID varchar(50) */
		</if>
		, UPT_DTTM /* UPT_DTTM 수정_일시 char(14) */
		) VALUES (
		  #{adminId} /* ADMIN_ID 관리자_ID varchar(50) */
		<if test="userNm != null">
		, #{userNm} /* USER_NM 사용자_명 varchar(10) */
		</if>
		<if test="pass != null">
		, #{pass} /* PASS 패스워드 varchar(256) */
		</if>
		<if test="nick != null">
		, #{nick} /* NICK 닉네임 varchar(10) */
		</if>
		<if test="emal != null">
		, #{emal} /* EMAL 이메일 varchar(50) */
		</if>
		<if test="hp != null">
		, #{hp} /* HP 휴대폰 varchar(15) */
		</if>
		<if test="useYn != null">
		, #{useYn} /* USE_YN 사용_여부 char(1) */
		</if>
		<if test="regUserId != null">
		, #{regUserId} /* REG_USER_ID 등록_사용자_ID varchar(50) */
		</if>
		, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') /* REG_DTTM 등록_일시 char(14) */
		<if test="uptUserId != null">
		, #{uptUserId} /* UPT_USER_ID 수정_사용자_ID varchar(50) */
		</if>
		, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') /* UPT_DTTM 수정_일시 char(14) */
		)
		ON
			DUPLICATE KEY
		UPDATE
		<trim prefix="" prefixOverrides=",">
		<if test="userNm != null">
		, USER_NM = #{userNm} /* USER_NM 사용자_명 varchar(10) */
		</if>
		<if test="pass != null">
		, PASS = #{pass} /* PASS 패스워드 varchar(256) */
		</if>
		<if test="nick != null">
		, NICK = #{nick} /* NICK 닉네임 varchar(10) */
		</if>
		<if test="emal != null">
		, EMAL = #{emal} /* EMAL 이메일 varchar(50) */
		</if>
		<if test="hp != null">
		, HP = #{hp} /* HP 휴대폰 varchar(15) */
		</if>
		<if test="useYn != null">
		, USE_YN = #{useYn} /* USE_YN 사용_여부 char(1) */
		</if>
		<if test="uptUserId != null">
		, UPT_USER_ID = #{uptUserId} /* UPT_USER_ID 수정_사용자_ID varchar(50) */
		</if>
		, UPT_DTTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') /* UPT_DTTM 수정_일시 char(14) */
		</trim>
	</update>
	
	<delete id="delete" >
		/* Generated SQL SQL ID : ADMIN_BASE.delete */
		DELETE FROM ADMIN_BASE
		WHERE
		ADMIN_ID = #{adminId} /* ADMIN_ID 관리자_ID varchar(50) */
	</delete>
</mapper>